; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\mg32x02z_exic_init.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\mg32x02z_exic_init.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I.\UserLib\Inc -I.\Main\Inc -I.\MGLib\Inc -I.\ProjectLib\Inc -I.\RTE\MG32x02z_ChipInit_Wizard\MG32F02A132 -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Megawin\CM0_DFP\2.0.4\Device\MG32x02z\MG32F02A132\Include -IC:\Keil_v5\ARM\PACK\Megawin\CM0_DFP\2.0.4\Device\MG32x02z\MG32F02A132\MG32x02z_ConfigerWizard\Include -IC:\Keil_v5\ARM\PACK\Megawin\CM0_DFP\2.0.4\Device\MG32x02z\MG32F02A_Driver\Include -IC:\Keil_v5\ARM\PACK\Megawin\CM0_DFP\2.0.4\Device\MG32x02z\MG32F02A_Middleware\Include -IC:\Keil_v5\ARM\PACK\Megawin\CM0_DFP\2.0.4\Sample\Driver\Include -IC:\Keil_v5\ARM\PACK\Megawin\CM0_DFP\2.0.4\Sample\Middleware\Include -D__UVISION_VERSION=534 -D_RTE_ -DMG32F02A132 -D_RTE_ --omf_browse=.\objects\mg32x02z_exic_init.crf RTE\MG32x02z_ChipInit_Wizard\MG32F02A132\MG32x02z_EXIC_Init.c]
                          THUMB

                          AREA ||i.EXIC_Init||, CODE, READONLY, ALIGN=1

                  EXIC_Init PROC
;;;53     
;;;54     void EXIC_Init(void)
000000  2100              MOVS     r1,#0
;;;55     {   
;;;56         //==============================================================================
;;;57         // EXINT0 Inital
;;;58         #if CONF_ExicPAInit_EN == 1
;;;59             #if defined(EXIC_PA_Base)
;;;60                 #if CONF_ExicPAInit_Mask !=0
;;;61                     EXIC->PA_TRGS.W =  ((CONF_ExicPAInit_Mask | (CONF_ExicPAInit_Mask >> 1))  &  CONF_ExicPAInit_Mode);  
;;;62                     #if CONF_ExicPAInit_AINV == 1 &&   ((CONF_ExicPAInit_AndOrMask & EXIC_Px_MSK_AM_mask_w)!=0)
;;;63                         EXIC->CR0.W = EXIC->CR0.W | EXIC_CR0_PA_AINV_mask_w;
;;;64                     #endif
;;;65                 #endif
;;;66                 #if CONF_ExicPAInit_AndOrMask !=0 
;;;67                     EXIC->PA_MSK.W = CONF_ExicPAInit_AndOrMask;
;;;68                 #endif
;;;69                 
;;;70                 EXIC_PA->PF.W = 0xFFFF;   
;;;71                 EXIC->STA.W   = ( EXIC_STA_PA_OF_mask_w | EXIC_STA_PA_AF_mask_w);
;;;72                  
;;;73                 #if CONF_ExicPAInit_INT == 1
;;;74                     EXIC->INT.W = EXIC->INT.W | EXIC_INT_PA_IEA_mask_w;
;;;75                     NVIC_EnableIRQ(EXINT0_IRQn);
;;;76                 #else
;;;77                     EXIC->INT.W = EXIC->INT.W & (~EXIC_INT_PA_IEA_mask_w);
;;;78                     NVIC_DisableIRQ(EXINT0_IRQn);
;;;79                 #endif    
;;;80             #else
;;;81                 #error "The device no support EXIC_PA , so no checked Enable EXIC PA inital please.
;;;82             #endif
;;;83         #endif
;;;84         //==============================================================================    
;;;85         // EXINT1 Inital
;;;86         #if CONF_ExicPBInit_EN == 1
;;;87             #if defined(EXIC_PB_Base)
;;;88                 #if CONF_ExicPBInit_Mask !=0
;;;89                     EXIC->PB_TRGS.W =  ((CONF_ExicPBInit_Mask | (CONF_ExicPBInit_Mask >> 1))  &  CONF_ExicPBInit_Mode);
;;;90                     #if CONF_ExicPBInit_AINV == 1 &&   ((CONF_ExicPBInit_AndOrMask & EXIC_Px_MSK_AM_mask_w)!=0)
;;;91                         EXIC->CR0.W = EXIC->CR0.W | EXIC_CR0_PB_AINV_mask_w;
;;;92                     #endif                  
;;;93                 #endif
;;;94                 #if CONF_ExicPBInit_AndOrMask !=0 
;;;95                     EXIC->PB_MSK.W = CONF_ExicPBInit_AndOrMask;
;;;96                 #endif
;;;97                 
;;;98                 EXIC_PB->PF.W = 0xFFFF;
;;;99                 EXIC->STA.W   = ( EXIC_STA_PB_OF_mask_w | EXIC_STA_PB_AF_mask_w);
;;;100                 
;;;101                #if CONF_ExicPBInit_INT == 1
;;;102                    EXIC->INT.W = EXIC->INT.W | EXIC_INT_PB_IEA_mask_w;
;;;103                    NVIC_EnableIRQ(EXINT1_IRQn);
;;;104                #else 
;;;105                    EXIC->INT.W = EXIC->INT.W & (~EXIC_INT_PB_IEA_mask_w);
;;;106                    NVIC_DisableIRQ(EXINT1_IRQn);
;;;107                #endif          
;;;108            #else
;;;109                #error "The device no support EXIC_PB , so no checked Enable EXIC PB inital please.
;;;110            #endif
;;;111        #endif
;;;112        //==============================================================================
;;;113        // EXINT2 Inital
;;;114        #if CONF_ExicPCInit_EN == 1
;;;115            #if defined(EXIC_PC_Base)
;;;116                #if CONF_ExicPCInit_Mask !=0
;;;117                    EXIC->PC_TRGS.W =  ((CONF_ExicPCInit_Mask | (CONF_ExicPCInit_Mask >> 1))  &  CONF_ExicPCInit_Mode);
;;;118                    #if CONF_ExicPCInit_AINV == 1 &&   ((CONF_ExicPCInit_AndOrMask & EXIC_Px_MSK_AM_mask_w)!=0)
;;;119                        EXIC->CR0.W = EXIC->CR0.W | EXIC_CR0_PC_AINV_mask_w;
;;;120                    #endif        
;;;121                #endif
;;;122                #if CONF_ExicPCInit_AndOrMask !=0 
;;;123                    EXIC->PC_MSK.W = CONF_ExicPCInit_AndOrMask;
;;;124                #endif
;;;125                
;;;126                EXIC_PC->PF.W = 0xFFFF;
;;;127                EXIC->STA.W   = ( EXIC_STA_PC_OF_mask_w | EXIC_STA_PC_AF_mask_w);
;;;128                 
;;;129                
;;;130                #if CONF_ExicPCInit_INT == 1
;;;131                    EXIC->INT.W = EXIC->INT.W | EXIC_INT_PC_IEA_mask_w;
;;;132                    NVIC_EnableIRQ(EXINT2_IRQn);
;;;133                #else
;;;134                    EXIC->INT.W = EXIC->INT.W & (~EXIC_INT_PC_IEA_mask_w);
;;;135                    NVIC_DisableIRQ(EXINT2_IRQn);
;;;136                #endif
;;;137            #else
;;;138                #error "The device no support EXIC_PC , so no checked Enable EXIC PC inital please.
;;;139            #endif        
;;;140        #endif    
;;;141        
;;;142        //==============================================================================
;;;143        // EXINT3 Inital
;;;144        #if CONF_ExicPDInit_EN == 1
;;;145            #if defined(EXIC_PD_Base)
;;;146                #if CONF_ExicPDInit_Mask !=0
;;;147                    EXIC->PD_TRGS.W =  ((CONF_ExicPDInit_Mask | (CONF_ExicPDInit_Mask >> 1))  &  CONF_ExicPDInit_Mode);  
;;;148                    #if CONF_ExicPDInit_AINV == 1 &&   ((CONF_ExicPDInit_AndOrMask & EXIC_Px_MSK_AM_mask_w)!=0)
;;;149                        EXIC->CR0.W = EXIC->CR0.W | EXIC_CR0_PD_AINV_mask_w;
;;;150                    #endif
;;;151                #endif
;;;152                #if CONF_ExicPDInit_AndOrMask !=0 
;;;153                    EXIC->PD_MSK.W = CONF_ExicPDInit_AndOrMask;
;;;154                #endif
;;;155                
;;;156                EXIC_PD->PF.W = 0xFFFF;
;;;157                EXIC->STA.W   = ( EXIC_STA_PD_OF_mask_w | EXIC_STA_PD_AF_mask_w);
;;;158                
;;;159                #if CONF_ExicPDInit_INT == 1
;;;160                    EXIC->INT.W = EXIC->INT.W | EXIC_INT_PD_IEA_mask_w;
;;;161                    NVIC_EnableIRQ(EXINT3_IRQn);
;;;162                #else
;;;163                    EXIC->INT.W = EXIC->INT.W & (~EXIC_INT_PD_IEA_mask_w);
;;;164                    NVIC_DisableIRQ(EXINT3_IRQn);
;;;165                #endif         
;;;166            #else
;;;167                #error "The device no support EXIC_PD , so no checked Enable EXIC PD inital please.
;;;168            #endif
;;;169        #endif    
;;;170        //==============================================================================
;;;171        // EXINT4 Inital
;;;172        #if CONF_ExicPDInit_EN == 1 
;;;173            #if defined(EXIC_PE_Base)
;;;174                #if CONF_ExicPEInit_Mask !=0
;;;175                    EXIC->PE_TRGS.W =  ((CONF_ExicPEInit_Mask | (CONF_ExicPEInit_Mask >> 1))  &  CONF_ExicPEInit_Mode);  
;;;176                    #if CONF_ExicPEInit_AINV == 1 &&   ((CONF_ExicPEInit_AndOrMask & EXIC_Px_MSK_AM_mask_w)!=0)
;;;177                        EXIC->CR0.W = EXIC->CR0.W | EXIC_CR0_PE_AINV_mask_w;
;;;178                    #endif
;;;179                #endif
;;;180                #if CONF_ExicPEInit_AndOrMask !=0 
;;;181                    EXIC->PE_MSK.W = CONF_ExicPEInit_AndOrMask;
;;;182                #endif
;;;183                
;;;184                EXIC_PE->PF.W = 0xFFFF;
;;;185                EXIC->STA.W   = ( EXIC_STA_PE_OF_mask_w | EXIC_STA_PE_AF_mask_w);
;;;186                
;;;187                #if CONF_ExicPEInit_INT == 1
;;;188                    EXIC->INT.W = EXIC->INT.W | EXIC_INT_PE_IEA_mask_w;
;;;189                    NVIC_EnableIRQ(EXINT3_IRQn);
;;;190                #else
;;;191                    EXIC->INT.W = EXIC->INT.W & (~EXIC_INT_PE_IEA_mask_w);
;;;192                    NVIC_DisableIRQ(EXINT3_IRQn);
;;;193                #endif
;;;194            #else
;;;195                #error "The device no support EXIC_PE , so no checked Enable EXIC PE inital please.
;;;196            #endif        
;;;197        #endif
;;;198        //==============================================================================
;;;199        // 1. RXEV Inital
;;;200        // 2. NMI Inital
;;;201        #if defined(MG32x02z_ExicRXEV_EN) && defined(MG32x02z_ExicNMI_SEL)
;;;202            EXIC->CR0.B[1] = ( MG32x02z_ExicRXEV_EN | MG32x02z_ExicNMI_SEL);
000002  2005              MOVS     r0,#5
000004  0700              LSLS     r0,r0,#28
000006  7441              STRB     r1,[r0,#0x11]
;;;203        #endif
;;;204        
;;;205        
;;;206        
;;;207        
;;;208    }
000008  4770              BX       lr
;;;209    
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  CONF_PW_InitConfig
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000090
                          DCD      0x00000000
                          DCD      0x00000010
                          DCD      0x00000000
                  CONF_RST_InitConfig
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x0000000e
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                  GPIO_CFG
                          DCD      0x00000000
                  CSC_InitConfig
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00010000
                          DCD      0x00000000
                          DCD      0x00000210
                          DCD      0x00000001
                          DCD      0x00000008
                          DCD      0x0000911f
                          DCD      0x000f13ed
                          DCD      0x00008993
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000004
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00b71b00
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "RTE\\MG32x02z_ChipInit_Wizard\\MG32F02A132\\MG32x02z_EXIC_Init.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___20_MG32x02z_EXIC_Init_c_51d13eb1____REV16|
#line 481 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.7.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___20_MG32x02z_EXIC_Init_c_51d13eb1____REV16| PROC
#line 482

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___20_MG32x02z_EXIC_Init_c_51d13eb1____REVSH|
#line 496
|__asm___20_MG32x02z_EXIC_Init_c_51d13eb1____REVSH| PROC
#line 497

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
