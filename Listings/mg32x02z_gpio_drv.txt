; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\mg32x02z_gpio_drv.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\mg32x02z_gpio_drv.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I.\UserLib\Inc -I.\Main\Inc -I.\MGLib\Inc -I.\ProjectLib\Inc -I.\RTE\MG32x02z_ChipInit_Wizard\MG32F02A132 -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Megawin\CM0_DFP\2.0.4\Device\MG32x02z\MG32F02A132\Include -IC:\Keil_v5\ARM\PACK\Megawin\CM0_DFP\2.0.4\Device\MG32x02z\MG32F02A132\MG32x02z_ConfigerWizard\Include -IC:\Keil_v5\ARM\PACK\Megawin\CM0_DFP\2.0.4\Device\MG32x02z\MG32F02A_Driver\Include -IC:\Keil_v5\ARM\PACK\Megawin\CM0_DFP\2.0.4\Device\MG32x02z\MG32F02A_Middleware\Include -IC:\Keil_v5\ARM\PACK\Megawin\CM0_DFP\2.0.4\Sample\Driver\Include -IC:\Keil_v5\ARM\PACK\Megawin\CM0_DFP\2.0.4\Sample\Middleware\Include -D__UVISION_VERSION=534 -D_RTE_ -DMG32F02A132 -D_RTE_ --omf_browse=.\objects\mg32x02z_gpio_drv.crf C:\Keil_v5\ARM\PACK\Megawin\CM0_DFP\2.0.4\Device\MG32x02z\MG32F02A_Driver\Source\MG32x02z_GPIO_DRV.c]
                          THUMB

                          AREA ||i.GPIO_ClearPortBit||, CODE, READONLY, ALIGN=1

                  GPIO_ClearPortBit PROC
;;;460     */
;;;461    void GPIO_ClearPortBit(GPIO_Struct* GPIOX , uint16_t Clear_Pin)
000000  8141              STRH     r1,[r0,#0xa]
;;;462    {
;;;463        GPIOX->SC.H[1] = Clear_Pin;
;;;464    }
000002  4770              BX       lr
;;;465    
                          ENDP


                          AREA ||i.GPIO_PinFunction_Select||, CODE, READONLY, ALIGN=1

                  GPIO_PinFunction_Select PROC
;;;337     */
;;;338    void GPIO_PinFunction_Select(Pin_Struct* PINX , uint8_t Pin_Func)
000000  b510              PUSH     {r4,lr}
;;;339    {
;;;340        uint32_t tmp;
;;;341    
;;;342        tmp = PINX->CR.W & (~PX_CR_AFS_mask_w);
000002  6803              LDR      r3,[r0,#0]
000004  240f              MOVS     r4,#0xf
000006  0324              LSLS     r4,r4,#12
000008  43a3              BICS     r3,r3,r4
00000a  461a              MOV      r2,r3
;;;343        tmp = tmp | (Pin_Func << 12) | PX_CR_LCK_mask_w;
00000c  030b              LSLS     r3,r1,#12
00000e  4313              ORRS     r3,r3,r2
000010  04e4              LSLS     r4,r4,#19
000012  4323              ORRS     r3,r3,r4
000014  461a              MOV      r2,r3
;;;344        PINX->CR.W = tmp;
000016  6002              STR      r2,[r0,#0]
;;;345        
;;;346    }
000018  bd10              POP      {r4,pc}
;;;347    
                          ENDP


                          AREA ||i.GPIO_PinHighSpeedMode_Cmd||, CODE, READONLY, ALIGN=1

                  GPIO_PinHighSpeedMode_Cmd PROC
;;;226     */
;;;227    void GPIO_PinHighSpeedMode_Cmd(Pin_Struct* PINX , FunctionalState Pin_HSMode)
000000  b510              PUSH     {r4,lr}
;;;228    {
;;;229        PINX->CR.MBIT.HS = Pin_HSMode;
000002  7802              LDRB     r2,[r0,#0]
000004  2308              MOVS     r3,#8
000006  439a              BICS     r2,r2,r3
000008  00cb              LSLS     r3,r1,#3
00000a  2408              MOVS     r4,#8
00000c  4023              ANDS     r3,r3,r4
00000e  431a              ORRS     r2,r2,r3
000010  7002              STRB     r2,[r0,#0]
;;;230    }
000012  bd10              POP      {r4,pc}
;;;231    /**
                          ENDP


                          AREA ||i.GPIO_PinInFilterDivider_Select||, CODE, READONLY, ALIGN=1

                  GPIO_PinInFilterDivider_Select PROC
;;;315     */
;;;316    void GPIO_PinInFilterDivider_Select(Pin_Struct* PINX , PINX_FilterDiver_Typedef Pin_FDIV)
000000  6802              LDR      r2,[r0,#0]
;;;317    {
;;;318        PINX->CR.W = PINX->CR.W & (~PX_CR_FDIV_mask_w);
000002  2303              MOVS     r3,#3
000004  029b              LSLS     r3,r3,#10
000006  439a              BICS     r2,r2,r3
000008  6002              STR      r2,[r0,#0]
;;;319        PINX->CR.W = PINX->CR.W | Pin_FDIV;
00000a  6802              LDR      r2,[r0,#0]
00000c  430a              ORRS     r2,r2,r1
00000e  6002              STR      r2,[r0,#0]
;;;320    }
000010  4770              BX       lr
;;;321    /**
                          ENDP


                          AREA ||i.GPIO_PinInverse_Cmd||, CODE, READONLY, ALIGN=1

                  GPIO_PinInverse_Cmd PROC
;;;268     */
;;;269    void GPIO_PinInverse_Cmd(Pin_Struct* PINX, FunctionalState Pin_INV)
000000  b510              PUSH     {r4,lr}
;;;270    {
;;;271        PINX->CR.MBIT.INV = Pin_INV;
000002  7802              LDRB     r2,[r0,#0]
000004  2380              MOVS     r3,#0x80
000006  439a              BICS     r2,r2,r3
000008  01cb              LSLS     r3,r1,#7
00000a  2480              MOVS     r4,#0x80
00000c  4023              ANDS     r3,r3,r4
00000e  431a              ORRS     r2,r2,r3
000010  7002              STRB     r2,[r0,#0]
;;;272    }
000012  bd10              POP      {r4,pc}
;;;273    /**
                          ENDP


                          AREA ||i.GPIO_PinMode_Config||, CODE, READONLY, ALIGN=1

                  GPIO_PinMode_Config PROC
;;;95      */
;;;96     void GPIO_PinMode_Config(Pin_Struct* PINX , PIN_InitTypeDef* PINX_InitStruct)
000000  790a              LDRB     r2,[r1,#4]
;;;97     {
;;;98     	PINX->CR.W = (PINX_InitStruct->PINX_Mode | PINX_InitStruct->PINX_Speed | 
000002  794b              LDRB     r3,[r1,#5]
000004  431a              ORRS     r2,r2,r3
000006  798b              LDRB     r3,[r1,#6]
000008  431a              ORRS     r2,r2,r3
00000a  79cb              LDRB     r3,[r1,#7]
00000c  431a              ORRS     r2,r2,r3
00000e  890b              LDRH     r3,[r1,#8]
000010  431a              ORRS     r2,r2,r3
000012  894b              LDRH     r3,[r1,#0xa]
000014  431a              ORRS     r2,r2,r3
000016  68cb              LDR      r3,[r1,#0xc]
000018  031b              LSLS     r3,r3,#12
00001a  431a              ORRS     r2,r2,r3
00001c  2301              MOVS     r3,#1
00001e  07db              LSLS     r3,r3,#31
000020  431a              ORRS     r2,r2,r3
000022  6002              STR      r2,[r0,#0]
;;;99     				   PINX_InitStruct->PINX_PUResistant|PINX_InitStruct->PINX_Inverse|
;;;100    	               PINX_InitStruct->PINX_OUTDrive|PINX_InitStruct->PINX_FilterDivider|
;;;101    	               (PINX_InitStruct->PINX_Alternate_Function<<12)|PX_CR_LCK_mask_w);
;;;102    }
000024  4770              BX       lr
;;;103    
                          ENDP


                          AREA ||i.GPIO_PinMode_Select||, CODE, READONLY, ALIGN=1

                  GPIO_PinMode_Select PROC
;;;202     */
;;;203    void GPIO_PinMode_Select(Pin_Struct* PINX , PINX_Mode_TypeDef Pin_Mode)
000000  6802              LDR      r2,[r0,#0]
;;;204    {
;;;205        PINX->CR.W = PINX->CR.W & (~PX_CR_IOM_mask_w);
000002  08d2              LSRS     r2,r2,#3
000004  00d2              LSLS     r2,r2,#3
000006  6002              STR      r2,[r0,#0]
;;;206        PINX->CR.W = PINX->CR.MBIT.IOM | Pin_Mode;
000008  7802              LDRB     r2,[r0,#0]
00000a  0752              LSLS     r2,r2,#29
00000c  0f52              LSRS     r2,r2,#29
00000e  430a              ORRS     r2,r2,r1
000010  6002              STR      r2,[r0,#0]
;;;207    }
000012  4770              BX       lr
;;;208    
                          ENDP


                          AREA ||i.GPIO_PinOutputDrive_Select||, CODE, READONLY, ALIGN=1

                  GPIO_PinOutputDrive_Select PROC
;;;291     */
;;;292    void GPIO_PinOutputDrive_Select(Pin_Struct* PINX , PINX_OUTDrive_Typedef Pin_ODC)
000000  6802              LDR      r2,[r0,#0]
;;;293    {
;;;294        PINX->CR.W = PINX->CR.W & (~PX_CR_ODC_mask_w);
000002  2303              MOVS     r3,#3
000004  021b              LSLS     r3,r3,#8
000006  439a              BICS     r2,r2,r3
000008  6002              STR      r2,[r0,#0]
;;;295        PINX->CR.W = PINX->CR.W | Pin_ODC;
00000a  6802              LDR      r2,[r0,#0]
00000c  430a              ORRS     r2,r2,r1
00000e  6002              STR      r2,[r0,#0]
;;;296    }
000010  4770              BX       lr
;;;297    /**
                          ENDP


                          AREA ||i.GPIO_PinPUResister_Cmd||, CODE, READONLY, ALIGN=1

                  GPIO_PinPUResister_Cmd PROC
;;;247     */
;;;248    void GPIO_PinPUResister_Cmd(Pin_Struct* PINX , FunctionalState Pin_PUR)
000000  b510              PUSH     {r4,lr}
;;;249    {
;;;250        PINX->CR.MBIT.PU = Pin_PUR;
000002  7802              LDRB     r2,[r0,#0]
000004  2320              MOVS     r3,#0x20
000006  439a              BICS     r2,r2,r3
000008  014b              LSLS     r3,r1,#5
00000a  2420              MOVS     r4,#0x20
00000c  4023              ANDS     r3,r3,r4
00000e  431a              ORRS     r2,r2,r3
000010  7002              STRB     r2,[r0,#0]
;;;251    }
000012  bd10              POP      {r4,pc}
;;;252    /**
                          ENDP


                          AREA ||i.GPIO_PortFilterClockSource_Select||, CODE, READONLY, ALIGN=1

                  GPIO_PortFilterClockSource_Select PROC
;;;367     */
;;;368    void GPIO_PortFilterClockSource_Select(IOM_Struct* IOMX , PortFilterCLK_Typedef FCKS)
000000  2240              MOVS     r2,#0x40
;;;369    {
;;;370        IOMX->FLT.MBIT.FCKS = FCKS;
000002  5c12              LDRB     r2,[r2,r0]
000004  08d2              LSRS     r2,r2,#3
000006  00d2              LSLS     r2,r2,#3
000008  074b              LSLS     r3,r1,#29
00000a  0f5b              LSRS     r3,r3,#29
00000c  431a              ORRS     r2,r2,r3
00000e  2340              MOVS     r3,#0x40
000010  541a              STRB     r2,[r3,r0]
;;;371        
;;;372    }
000012  4770              BX       lr
;;;373    
                          ENDP


                          AREA ||i.GPIO_PortMode_Config||, CODE, READONLY, ALIGN=1

                  GPIO_PortMode_Config PROC
;;;160     */
;;;161    void GPIO_PortMode_Config(IOM_Struct* IOMX, PIN_InitTypeDef* PINX_InitStruct)
000000  b570              PUSH     {r4-r6,lr}
;;;162    {
000002  4602              MOV      r2,r0
;;;163    	uint32_t pin_pos = 0 , nowpin = 0x00000001;
000004  2300              MOVS     r3,#0
000006  2001              MOVS     r0,#1
;;;164        uint32_t set_pin = PINX_InitStruct->PINX_Pin;
000008  680c              LDR      r4,[r1,#0]
;;;165        
;;;166        while(set_pin!=0)
00000a  e01b              B        |L11.68|
                  |L11.12|
;;;167        {
;;;168            if((PINX_InitStruct->PINX_Pin & nowpin)==nowpin)
00000c  680d              LDR      r5,[r1,#0]
00000e  4005              ANDS     r5,r5,r0
000010  4285              CMP      r5,r0
000012  d115              BNE      |L11.64|
;;;169    		{
;;;170                *((volatile uint32_t*)((uint32_t)IOMX + 0x04*pin_pos)) =   (PINX_InitStruct->PINX_Mode | PINX_InitStruct->PINX_Speed | 
000014  790d              LDRB     r5,[r1,#4]
000016  794e              LDRB     r6,[r1,#5]
000018  4335              ORRS     r5,r5,r6
00001a  798e              LDRB     r6,[r1,#6]
00001c  4335              ORRS     r5,r5,r6
00001e  79ce              LDRB     r6,[r1,#7]
000020  4335              ORRS     r5,r5,r6
000022  890e              LDRH     r6,[r1,#8]
000024  4335              ORRS     r5,r5,r6
000026  894e              LDRH     r6,[r1,#0xa]
000028  4335              ORRS     r5,r5,r6
00002a  68ce              LDR      r6,[r1,#0xc]
00002c  0336              LSLS     r6,r6,#12
00002e  4335              ORRS     r5,r5,r6
000030  2601              MOVS     r6,#1
000032  07f6              LSLS     r6,r6,#31
000034  4335              ORRS     r5,r5,r6
000036  009e              LSLS     r6,r3,#2
000038  5195              STR      r5,[r2,r6]
;;;171    																	    PINX_InitStruct->PINX_PUResistant|PINX_InitStruct->PINX_Inverse|
;;;172    																	    PINX_InitStruct->PINX_OUTDrive|PINX_InitStruct->PINX_FilterDivider|
;;;173    																	   (PINX_InitStruct->PINX_Alternate_Function<<12)|PX_CR_LCK_mask_w);
;;;174                set_pin = set_pin & (~nowpin);
00003a  4625              MOV      r5,r4
00003c  4385              BICS     r5,r5,r0
00003e  462c              MOV      r4,r5
                  |L11.64|
;;;175            }
;;;176            pin_pos = pin_pos + 1;
000040  1c5b              ADDS     r3,r3,#1
;;;177            nowpin = nowpin << 1;
000042  0040              LSLS     r0,r0,#1
                  |L11.68|
000044  2c00              CMP      r4,#0                 ;166
000046  d1e1              BNE      |L11.12|
;;;178        }
;;;179    }
000048  bd70              POP      {r4-r6,pc}
;;;180    
                          ENDP


                          AREA ||i.GPIO_ReadPort||, CODE, READONLY, ALIGN=1

                  GPIO_ReadPort PROC
;;;417     */
;;;418    uint16_t GPIO_ReadPort(GPIO_Struct* GPIOX)
000000  4601              MOV      r1,r0
;;;419    {
;;;420        return(GPIOX->IN.W);
000002  6848              LDR      r0,[r1,#4]
000004  b280              UXTH     r0,r0
;;;421    }
000006  4770              BX       lr
;;;422    
                          ENDP


                          AREA ||i.GPIO_SetClearPortBit||, CODE, READONLY, ALIGN=1

                  GPIO_SetClearPortBit PROC
;;;483    
;;;484    void GPIO_SetClearPortBit(GPIO_Struct* GPIOX, uint16_t Set_Pin , uint16_t Clr_Pin)
000000  0413              LSLS     r3,r2,#16
;;;485    {
;;;486        
;;;487        GPIOX->SC.W = (((Clr_Pin<<16) & 0xFFFF0000) | Set_Pin);
000002  0c1b              LSRS     r3,r3,#16
000004  041b              LSLS     r3,r3,#16
000006  430b              ORRS     r3,r3,r1
000008  6083              STR      r3,[r0,#8]
;;;488        
;;;489    }
00000a  4770              BX       lr
;;;490    
                          ENDP


                          AREA ||i.GPIO_SetPortBit||, CODE, READONLY, ALIGN=1

                  GPIO_SetPortBit PROC
;;;440     */
;;;441    void GPIO_SetPortBit(GPIO_Struct* GPIOX , uint16_t Set_Pin)
000000  8101              STRH     r1,[r0,#8]
;;;442    {
;;;443        GPIOX->SC.H[0] = Set_Pin;
;;;444    }
000002  4770              BX       lr
;;;445    
                          ENDP


                          AREA ||i.GPIO_WritePort||, CODE, READONLY, ALIGN=1

                  GPIO_WritePort PROC
;;;397     */
;;;398    void GPIO_WritePort(GPIO_Struct* GPIOX, uint16_t Port_Status)
000000  6001              STR      r1,[r0,#0]
;;;399    {
;;;400    	GPIOX->OUT.W = Port_Status;	
;;;401    }	
000002  4770              BX       lr
;;;402    
                          ENDP


;*** Start embedded assembler ***

#line 1 "C:\\Keil_v5\\ARM\\PACK\\Megawin\\CM0_DFP\\2.0.4\\Device\\MG32x02z\\MG32F02A_Driver\\Source\\MG32x02z_GPIO_DRV.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_MG32x02z_GPIO_DRV_c_73a616da____REV16|
#line 481 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.7.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___19_MG32x02z_GPIO_DRV_c_73a616da____REV16| PROC
#line 482

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_MG32x02z_GPIO_DRV_c_73a616da____REVSH|
#line 496
|__asm___19_MG32x02z_GPIO_DRV_c_73a616da____REVSH| PROC
#line 497

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
