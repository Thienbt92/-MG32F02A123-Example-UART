; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\mg32x02z_mem_drv.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\mg32x02z_mem_drv.d --cpu=Cortex-M0 --apcs=interwork -O0 --diag_suppress=9931 -I.\UserLib\Inc -I.\Main\Inc -I.\MGLib\Inc -I.\ProjectLib\Inc -I.\RTE\MG32x02z_ChipInit_Wizard\MG32F02A132 -I.\RTE\_Target_1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Megawin\CM0_DFP\2.0.4\Device\MG32x02z\MG32F02A132\Include -IC:\Keil_v5\ARM\PACK\Megawin\CM0_DFP\2.0.4\Device\MG32x02z\MG32F02A132\MG32x02z_ConfigerWizard\Include -IC:\Keil_v5\ARM\PACK\Megawin\CM0_DFP\2.0.4\Device\MG32x02z\MG32F02A_Driver\Include -IC:\Keil_v5\ARM\PACK\Megawin\CM0_DFP\2.0.4\Device\MG32x02z\MG32F02A_Middleware\Include -IC:\Keil_v5\ARM\PACK\Megawin\CM0_DFP\2.0.4\Sample\Driver\Include -IC:\Keil_v5\ARM\PACK\Megawin\CM0_DFP\2.0.4\Sample\Middleware\Include -D__UVISION_VERSION=534 -D_RTE_ -DMG32F02A132 -D_RTE_ --omf_browse=.\objects\mg32x02z_mem_drv.crf C:\Keil_v5\ARM\PACK\Megawin\CM0_DFP\2.0.4\Device\MG32x02z\MG32F02A_Driver\Source\MG32x02z_MEM_DRV.c]
                          THUMB

                          AREA ||i.MEM_APWrite_Cmd||, CODE, READONLY, ALIGN=2

                  MEM_APWrite_Cmd PROC
;;;845     */
;;;846    DRV_Return MEM_APWrite_Cmd(FunctionalState State)
000000  4601              MOV      r1,r0
;;;847    {
;;;848        __MEM_UnProtect();
000002  204d              MOVS     r0,#0x4d
000004  0600              LSLS     r0,r0,#24
000006  8980              LDRH     r0,[r0,#0xc]
000008  4a1b              LDR      r2,|L1.120|
00000a  4610              MOV      r0,r2
00000c  224d              MOVS     r2,#0x4d
00000e  0612              LSLS     r2,r2,#24
000010  8190              STRH     r0,[r2,#0xc]
;;;849        __MEM_Enable();
000012  4610              MOV      r0,r2
000014  6900              LDR      r0,[r0,#0x10]
000016  2201              MOVS     r2,#1
000018  4310              ORRS     r0,r0,r2
00001a  224d              MOVS     r2,#0x4d
00001c  0612              LSLS     r2,r2,#24
00001e  6110              STR      r0,[r2,#0x10]
;;;850    
;;;851        if(State == ENABLE)
000020  2901              CMP      r1,#1
000022  d117              BNE      |L1.84|
;;;852        {
;;;853            __MEM_Access_Enable(MEM_ACCESS_AP_WRITE);
000024  4610              MOV      r0,r2
000026  6940              LDR      r0,[r0,#0x14]
000028  2201              MOVS     r2,#1
00002a  4310              ORRS     r0,r0,r2
00002c  224d              MOVS     r2,#0x4d
00002e  0612              LSLS     r2,r2,#24
000030  6150              STR      r0,[r2,#0x14]
;;;854    
;;;855            if((__MEM_GetAccessState(MEM_ACCESS_AP_WRITE)) == CLR)
000032  4610              MOV      r0,r2
000034  6940              LDR      r0,[r0,#0x14]
000036  4008              ANDS     r0,r0,r1
000038  2201              MOVS     r2,#1
00003a  4050              EORS     r0,r0,r2
00003c  4050              EORS     r0,r0,r2
00003e  2800              CMP      r0,#0
000040  d110              BNE      |L1.100|
;;;856            {
;;;857                __MEM_Protect();
000042  204d              MOVS     r0,#0x4d
000044  0600              LSLS     r0,r0,#24
000046  8980              LDRH     r0,[r0,#0xc]
000048  2000              MOVS     r0,#0
00004a  224d              MOVS     r2,#0x4d
00004c  0612              LSLS     r2,r2,#24
00004e  8190              STRH     r0,[r2,#0xc]
;;;858                return DRV_Failure;
000050  2001              MOVS     r0,#1
                  |L1.82|
;;;859            }
;;;860        }
;;;861        else
;;;862        {
;;;863            __MEM_Access_Disable(MEM_ACCESS_AP_WRITE);
;;;864        }
;;;865        __MEM_Protect();
;;;866        return DRV_Success;
;;;867    }
000052  4770              BX       lr
                  |L1.84|
000054  204d              MOVS     r0,#0x4d              ;863
000056  0600              LSLS     r0,r0,#24             ;863
000058  6940              LDR      r0,[r0,#0x14]         ;863
00005a  0840              LSRS     r0,r0,#1              ;863
00005c  0040              LSLS     r0,r0,#1              ;863
00005e  224d              MOVS     r2,#0x4d              ;863
000060  0612              LSLS     r2,r2,#24             ;863
000062  6150              STR      r0,[r2,#0x14]         ;863
                  |L1.100|
000064  204d              MOVS     r0,#0x4d              ;865
000066  0600              LSLS     r0,r0,#24             ;865
000068  8980              LDRH     r0,[r0,#0xc]          ;865
00006a  2000              MOVS     r0,#0                 ;865
00006c  224d              MOVS     r2,#0x4d              ;865
00006e  0612              LSLS     r2,r2,#24             ;865
000070  8190              STRH     r0,[r2,#0xc]          ;865
000072  bf00              NOP                            ;866
000074  e7ed              B        |L1.82|
;;;868    
                          ENDP

000076  0000              DCW      0x0000
                  |L1.120|
                          DCD      0x0000a217

                          AREA ||i.MEM_Access_Cmd||, CODE, READONLY, ALIGN=2

                  MEM_Access_Cmd PROC
;;;558     */
;;;559    void MEM_Access_Cmd(uint32_t MEM_ACCESS, FunctionalState State)
000000  b570              PUSH     {r4-r6,lr}
;;;560    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;561        UnProtectModuleReg(MEMprotect);
000006  480c              LDR      r0,|L2.56|
000008  f7fffffe          BL       UnProtectModuleReg
;;;562    	if(State==ENABLE)
00000c  2d01              CMP      r5,#1
00000e  d107              BNE      |L2.32|
;;;563    	{
;;;564    		MEM->CR1.W |= MEM_ACCESS;
000010  204d              MOVS     r0,#0x4d
000012  0600              LSLS     r0,r0,#24
000014  6940              LDR      r0,[r0,#0x14]
000016  4320              ORRS     r0,r0,r4
000018  214d              MOVS     r1,#0x4d
00001a  0609              LSLS     r1,r1,#24
00001c  6148              STR      r0,[r1,#0x14]
00001e  e006              B        |L2.46|
                  |L2.32|
;;;565    	}
;;;566    	else
;;;567    	{
;;;568    		MEM->CR1.W &= (~MEM_ACCESS);
000020  204d              MOVS     r0,#0x4d
000022  0600              LSLS     r0,r0,#24
000024  6940              LDR      r0,[r0,#0x14]
000026  43a0              BICS     r0,r0,r4
000028  214d              MOVS     r1,#0x4d
00002a  0609              LSLS     r1,r1,#24
00002c  6148              STR      r0,[r1,#0x14]
                  |L2.46|
;;;569    	}
;;;570        ProtectModuleReg(MEMprotect);
00002e  4802              LDR      r0,|L2.56|
000030  f7fffffe          BL       ProtectModuleReg
;;;571    }
000034  bd70              POP      {r4-r6,pc}
;;;572    
                          ENDP

000036  0000              DCW      0x0000
                  |L2.56|
                          DCD      0x4d00000c

                          AREA ||i.MEM_ClearFlag||, CODE, READONLY, ALIGN=1

                  MEM_ClearFlag PROC
;;;134     */
;;;135    void MEM_ClearFlag(uint32_t MEM_FLAG)
000000  214d              MOVS     r1,#0x4d
;;;136    {
;;;137        MEM->STA.W = MEM_FLAG;
000002  0609              LSLS     r1,r1,#24
000004  6008              STR      r0,[r1,#0]
;;;138    }
000006  4770              BX       lr
;;;139    
                          ENDP


                          AREA ||i.MEM_Cmd||, CODE, READONLY, ALIGN=2

                  MEM_Cmd PROC
;;;169     */
;;;170    void MEM_Cmd(FunctionalState State)
000000  b510              PUSH     {r4,lr}
;;;171    {
000002  4604              MOV      r4,r0
;;;172        UnProtectModuleReg(MEMprotect);
000004  480c              LDR      r0,|L4.56|
000006  f7fffffe          BL       UnProtectModuleReg
;;;173        if(State == ENABLE)
00000a  2c01              CMP      r4,#1
00000c  d108              BNE      |L4.32|
;;;174            MEM->CR0.B[0] |= MEM_CR0_EN_mask_b0;
00000e  204d              MOVS     r0,#0x4d
000010  0600              LSLS     r0,r0,#24
000012  7c00              LDRB     r0,[r0,#0x10]
000014  2101              MOVS     r1,#1
000016  4308              ORRS     r0,r0,r1
000018  214d              MOVS     r1,#0x4d
00001a  0609              LSLS     r1,r1,#24
00001c  7408              STRB     r0,[r1,#0x10]
00001e  e007              B        |L4.48|
                  |L4.32|
;;;175        else
;;;176            MEM->CR0.B[0] &= ~MEM_CR0_EN_mask_b0;
000020  204d              MOVS     r0,#0x4d
000022  0600              LSLS     r0,r0,#24
000024  7c00              LDRB     r0,[r0,#0x10]
000026  0840              LSRS     r0,r0,#1
000028  0040              LSLS     r0,r0,#1
00002a  214d              MOVS     r1,#0x4d
00002c  0609              LSLS     r1,r1,#24
00002e  7408              STRB     r0,[r1,#0x10]
                  |L4.48|
;;;177        ProtectModuleReg(MEMprotect);
000030  4801              LDR      r0,|L4.56|
000032  f7fffffe          BL       ProtectModuleReg
;;;178    }
000036  bd10              POP      {r4,pc}
;;;179    
                          ENDP

                  |L4.56|
                          DCD      0x4d00000c

                          AREA ||i.MEM_ErrorHardFault_Cmd||, CODE, READONLY, ALIGN=2

                  MEM_ErrorHardFault_Cmd PROC
;;;380     */
;;;381    void MEM_ErrorHardFault_Cmd(FunctionalState State)
000000  b510              PUSH     {r4,lr}
;;;382    {
000002  4604              MOV      r4,r0
;;;383        UnProtectModuleReg(MEMprotect);
000004  480c              LDR      r0,|L5.56|
000006  f7fffffe          BL       UnProtectModuleReg
;;;384        if(State == ENABLE)
00000a  2c01              CMP      r4,#1
00000c  d108              BNE      |L5.32|
;;;385            MEM->CR0.W |= MEM_CR0_HF_EN_mask_w;
00000e  204d              MOVS     r0,#0x4d
000010  0600              LSLS     r0,r0,#24
000012  6900              LDR      r0,[r0,#0x10]
000014  2102              MOVS     r1,#2
000016  4308              ORRS     r0,r0,r1
000018  214d              MOVS     r1,#0x4d
00001a  0609              LSLS     r1,r1,#24
00001c  6108              STR      r0,[r1,#0x10]
00001e  e007              B        |L5.48|
                  |L5.32|
;;;386        else
;;;387            MEM->CR0.W &= ~MEM_CR0_HF_EN_mask_w;
000020  204d              MOVS     r0,#0x4d
000022  0600              LSLS     r0,r0,#24
000024  6900              LDR      r0,[r0,#0x10]
000026  2102              MOVS     r1,#2
000028  4388              BICS     r0,r0,r1
00002a  214d              MOVS     r1,#0x4d
00002c  0609              LSLS     r1,r1,#24
00002e  6108              STR      r0,[r1,#0x10]
                  |L5.48|
;;;388        ProtectModuleReg(MEMprotect);
000030  4801              LDR      r0,|L5.56|
000032  f7fffffe          BL       ProtectModuleReg
;;;389    }
000036  bd10              POP      {r4,pc}
;;;390    
                          ENDP

                  |L5.56|
                          DCD      0x4d00000c

                          AREA ||i.MEM_ErrorReset_Cmd||, CODE, READONLY, ALIGN=2

                  MEM_ErrorReset_Cmd PROC
;;;340     */
;;;341    void MEM_ErrorReset_Cmd(uint32_t Reset, FunctionalState State)
000000  b570              PUSH     {r4-r6,lr}
;;;342    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;343        UnProtectModuleReg(MEMprotect);
000006  480c              LDR      r0,|L6.56|
000008  f7fffffe          BL       UnProtectModuleReg
;;;344        if(State == ENABLE)
00000c  2d01              CMP      r5,#1
00000e  d107              BNE      |L6.32|
;;;345            MEM->INT.W |= Reset;    
000010  204d              MOVS     r0,#0x4d
000012  0600              LSLS     r0,r0,#24
000014  6840              LDR      r0,[r0,#4]
000016  4320              ORRS     r0,r0,r4
000018  214d              MOVS     r1,#0x4d
00001a  0609              LSLS     r1,r1,#24
00001c  6048              STR      r0,[r1,#4]
00001e  e006              B        |L6.46|
                  |L6.32|
;;;346        else
;;;347            MEM->INT.W &= ~Reset;
000020  204d              MOVS     r0,#0x4d
000022  0600              LSLS     r0,r0,#24
000024  6840              LDR      r0,[r0,#4]
000026  43a0              BICS     r0,r0,r4
000028  214d              MOVS     r1,#0x4d
00002a  0609              LSLS     r1,r1,#24
00002c  6048              STR      r0,[r1,#4]
                  |L6.46|
;;;348        ProtectModuleReg(MEMprotect);
00002e  4802              LDR      r0,|L6.56|
000030  f7fffffe          BL       ProtectModuleReg
;;;349    }
000034  bd70              POP      {r4-r6,pc}
;;;350    
                          ENDP

000036  0000              DCW      0x0000
                  |L6.56|
                          DCD      0x4d00000c

                          AREA ||i.MEM_GetAccessState||, CODE, READONLY, ALIGN=1

                  MEM_GetAccessState PROC
;;;512     */
;;;513    DRV_Return MEM_GetAccessState(uint32_t MEM_ACCESS)
000000  4601              MOV      r1,r0
;;;514    {
;;;515    	if((MEM->CR1.W & MEM_ACCESS) == MEM_ACCESS)
000002  204d              MOVS     r0,#0x4d
000004  0600              LSLS     r0,r0,#24
000006  6940              LDR      r0,[r0,#0x14]
000008  4008              ANDS     r0,r0,r1
00000a  4288              CMP      r0,r1
00000c  d101              BNE      |L7.18|
;;;516    	{
;;;517    		return DRV_Success;
00000e  2000              MOVS     r0,#0
                  |L7.16|
;;;518    	}
;;;519    	else
;;;520    	{
;;;521    		return DRV_Failure;
;;;522    	}
;;;523    }
000010  4770              BX       lr
                  |L7.18|
000012  2001              MOVS     r0,#1                 ;521
000014  e7fc              B        |L7.16|
;;;524    
                          ENDP


                          AREA ||i.MEM_GetAllAccessState||, CODE, READONLY, ALIGN=2

                  MEM_GetAllAccessState PROC
;;;469     */
;;;470    uint32_t MEM_GetAllAccessState(void)
000000  204d              MOVS     r0,#0x4d
;;;471    {
;;;472        return(MEM->CR1.W & (MEM_ACCESS_AP_WRITE | 
000002  0600              LSLS     r0,r0,#24
000004  6940              LDR      r0,[r0,#0x14]
000006  4901              LDR      r1,|L8.12|
000008  4008              ANDS     r0,r0,r1
;;;473                             MEM_ACCESS_IAP_WRITE | 
;;;474                             MEM_ACCESS_ISPD_READ |  
;;;475                             MEM_ACCESS_ISPD_WRITE | 
;;;476                             MEM_ACCESS_ISP_READ | 
;;;477                             MEM_ACCESS_ISP_WRITE | 
;;;478                             MEM_ACCESS_IAP_EXECUTE));
;;;479    }
00000a  4770              BX       lr
;;;480    
                          ENDP

                  |L8.12|
                          DCD      0x0000031f

                          AREA ||i.MEM_GetAllFlagStatus||, CODE, READONLY, ALIGN=1

                  MEM_GetAllFlagStatus PROC
;;;64      */
;;;65     uint32_t MEM_GetAllFlagStatus(void)
000000  204d              MOVS     r0,#0x4d
;;;66     {
;;;67         return(MEM->STA.W);
000002  0600              LSLS     r0,r0,#24
000004  6800              LDR      r0,[r0,#0]
;;;68     }
000006  4770              BX       lr
;;;69     
                          ENDP


                          AREA ||i.MEM_GetFlagStatus||, CODE, READONLY, ALIGN=1

                  MEM_GetFlagStatus PROC
;;;99      */
;;;100    DRV_Return MEM_GetFlagStatus(uint32_t MEM_FLAG)
000000  4601              MOV      r1,r0
;;;101    {
;;;102        if((MEM->STA.W & MEM_FLAG) == MEM_FLAG)
000002  204d              MOVS     r0,#0x4d
000004  0600              LSLS     r0,r0,#24
000006  6800              LDR      r0,[r0,#0]
000008  4008              ANDS     r0,r0,r1
00000a  4288              CMP      r0,r1
00000c  d101              BNE      |L10.18|
;;;103            return DRV_True;
00000e  2001              MOVS     r0,#1
                  |L10.16|
;;;104        else
;;;105            return DRV_False;
;;;106    }
000010  4770              BX       lr
                  |L10.18|
000012  2000              MOVS     r0,#0                 ;105
000014  e7fc              B        |L10.16|
;;;107    
                          ENDP


                          AREA ||i.MEM_GetIAPSize||, CODE, READONLY, ALIGN=2

                  MEM_GetIAPSize PROC
;;;894     */
;;;895    uint32_t MEM_GetIAPSize(void)
000000  4801              LDR      r0,|L11.8|
;;;896    {
;;;897        return ((uint32_t)(MEM->IAPSZ.H[0] << 2));
000002  8900              LDRH     r0,[r0,#8]
000004  0080              LSLS     r0,r0,#2
;;;898    }
000006  4770              BX       lr
;;;899    
                          ENDP

                  |L11.8|
                          DCD      0x4d000020

                          AREA ||i.MEM_GetISPSize||, CODE, READONLY, ALIGN=2

                  MEM_GetISPSize PROC
;;;1236    */
;;;1237   uint32_t MEM_GetISPSize(void)
000000  4801              LDR      r0,|L12.8|
;;;1238   {
;;;1239       return ((uint32_t)(CFG->OR02.B[1] * 1024));
000002  7e40              LDRB     r0,[r0,#0x19]
000004  0280              LSLS     r0,r0,#10
;;;1240   }
000006  4770              BX       lr
;;;1241   
                          ENDP

                  |L12.8|
                          DCD      0x4ff00000

                          AREA ||i.MEM_IAPExecuteCode_Cmd||, CODE, READONLY, ALIGN=2

                  MEM_IAPExecuteCode_Cmd PROC
;;;1033    */
;;;1034   DRV_Return MEM_IAPExecuteCode_Cmd(FunctionalState State)
000000  4601              MOV      r1,r0
;;;1035   {
;;;1036       __MEM_UnProtect();
000002  204d              MOVS     r0,#0x4d
000004  0600              LSLS     r0,r0,#24
000006  8980              LDRH     r0,[r0,#0xc]
000008  4a1a              LDR      r2,|L13.116|
00000a  4610              MOV      r0,r2
00000c  224d              MOVS     r2,#0x4d
00000e  0612              LSLS     r2,r2,#24
000010  8190              STRH     r0,[r2,#0xc]
;;;1037       __MEM_Enable();
000012  4610              MOV      r0,r2
000014  6900              LDR      r0,[r0,#0x10]
000016  2201              MOVS     r2,#1
000018  4310              ORRS     r0,r0,r2
00001a  224d              MOVS     r2,#0x4d
00001c  0612              LSLS     r2,r2,#24
00001e  6110              STR      r0,[r2,#0x10]
;;;1038   
;;;1039       if(State == ENABLE)
000020  2901              CMP      r1,#1
000022  d116              BNE      |L13.82|
;;;1040       {
;;;1041           __MEM_Access_Enable(MEM_ACCESS_IAP_EXECUTE);
000024  4610              MOV      r0,r2
000026  6940              LDR      r0,[r0,#0x14]
000028  2210              MOVS     r2,#0x10
00002a  4310              ORRS     r0,r0,r2
00002c  224d              MOVS     r2,#0x4d
00002e  0612              LSLS     r2,r2,#24
000030  6150              STR      r0,[r2,#0x14]
;;;1042   
;;;1043           if((__MEM_GetAccessState(MEM_ACCESS_IAP_EXECUTE)) == CLR)
000032  4610              MOV      r0,r2
000034  6940              LDR      r0,[r0,#0x14]
000036  2210              MOVS     r2,#0x10
000038  4010              ANDS     r0,r0,r2
00003a  0900              LSRS     r0,r0,#4
00003c  2800              CMP      r0,#0
00003e  d110              BNE      |L13.98|
;;;1044           {
;;;1045               __MEM_Protect();
000040  204d              MOVS     r0,#0x4d
000042  0600              LSLS     r0,r0,#24
000044  8980              LDRH     r0,[r0,#0xc]
000046  2000              MOVS     r0,#0
000048  224d              MOVS     r2,#0x4d
00004a  0612              LSLS     r2,r2,#24
00004c  8190              STRH     r0,[r2,#0xc]
;;;1046               return DRV_Failure;
00004e  2001              MOVS     r0,#1
                  |L13.80|
;;;1047           }
;;;1048       }
;;;1049       else
;;;1050       {
;;;1051           __MEM_Access_Disable(MEM_ACCESS_IAP_EXECUTE);
;;;1052       }
;;;1053       __MEM_Protect();
;;;1054       return DRV_Success;
;;;1055   }
000050  4770              BX       lr
                  |L13.82|
000052  204d              MOVS     r0,#0x4d              ;1051
000054  0600              LSLS     r0,r0,#24             ;1051
000056  6940              LDR      r0,[r0,#0x14]         ;1051
000058  2210              MOVS     r2,#0x10              ;1051
00005a  4390              BICS     r0,r0,r2              ;1051
00005c  224d              MOVS     r2,#0x4d              ;1051
00005e  0612              LSLS     r2,r2,#24             ;1051
000060  6150              STR      r0,[r2,#0x14]         ;1051
                  |L13.98|
000062  204d              MOVS     r0,#0x4d              ;1053
000064  0600              LSLS     r0,r0,#24             ;1053
000066  8980              LDRH     r0,[r0,#0xc]          ;1053
000068  2000              MOVS     r0,#0                 ;1053
00006a  224d              MOVS     r2,#0x4d              ;1053
00006c  0612              LSLS     r2,r2,#24             ;1053
00006e  8190              STRH     r0,[r2,#0xc]          ;1053
000070  bf00              NOP                            ;1054
000072  e7ed              B        |L13.80|
;;;1056   
                          ENDP

                  |L13.116|
                          DCD      0x0000a217

                          AREA ||i.MEM_IAPWrite_Cmd||, CODE, READONLY, ALIGN=2

                  MEM_IAPWrite_Cmd PROC
;;;1087    */
;;;1088   DRV_Return MEM_IAPWrite_Cmd(FunctionalState State)
000000  4601              MOV      r1,r0
;;;1089   {
;;;1090       __MEM_UnProtect();
000002  204d              MOVS     r0,#0x4d
000004  0600              LSLS     r0,r0,#24
000006  8980              LDRH     r0,[r0,#0xc]
000008  4a1a              LDR      r2,|L14.116|
00000a  4610              MOV      r0,r2
00000c  224d              MOVS     r2,#0x4d
00000e  0612              LSLS     r2,r2,#24
000010  8190              STRH     r0,[r2,#0xc]
;;;1091       __MEM_Enable();
000012  4610              MOV      r0,r2
000014  6900              LDR      r0,[r0,#0x10]
000016  2201              MOVS     r2,#1
000018  4310              ORRS     r0,r0,r2
00001a  224d              MOVS     r2,#0x4d
00001c  0612              LSLS     r2,r2,#24
00001e  6110              STR      r0,[r2,#0x10]
;;;1092   
;;;1093       if(State == ENABLE)
000020  2901              CMP      r1,#1
000022  d116              BNE      |L14.82|
;;;1094       {
;;;1095           __MEM_Access_Enable(MEM_ACCESS_IAP_WRITE);
000024  4610              MOV      r0,r2
000026  6940              LDR      r0,[r0,#0x14]
000028  2202              MOVS     r2,#2
00002a  4310              ORRS     r0,r0,r2
00002c  224d              MOVS     r2,#0x4d
00002e  0612              LSLS     r2,r2,#24
000030  6150              STR      r0,[r2,#0x14]
;;;1096   
;;;1097           if((__MEM_GetAccessState(MEM_ACCESS_IAP_WRITE)) == CLR)
000032  4610              MOV      r0,r2
000034  6940              LDR      r0,[r0,#0x14]
000036  2202              MOVS     r2,#2
000038  4010              ANDS     r0,r0,r2
00003a  0840              LSRS     r0,r0,#1
00003c  2800              CMP      r0,#0
00003e  d110              BNE      |L14.98|
;;;1098           {
;;;1099               __MEM_Protect();
000040  204d              MOVS     r0,#0x4d
000042  0600              LSLS     r0,r0,#24
000044  8980              LDRH     r0,[r0,#0xc]
000046  2000              MOVS     r0,#0
000048  224d              MOVS     r2,#0x4d
00004a  0612              LSLS     r2,r2,#24
00004c  8190              STRH     r0,[r2,#0xc]
;;;1100               return DRV_Failure;
00004e  2001              MOVS     r0,#1
                  |L14.80|
;;;1101           }
;;;1102       }
;;;1103       else
;;;1104       {
;;;1105           __MEM_Access_Disable(MEM_ACCESS_IAP_WRITE);
;;;1106       }
;;;1107       __MEM_Protect();
;;;1108       return DRV_Success;
;;;1109   }
000050  4770              BX       lr
                  |L14.82|
000052  204d              MOVS     r0,#0x4d              ;1105
000054  0600              LSLS     r0,r0,#24             ;1105
000056  6940              LDR      r0,[r0,#0x14]         ;1105
000058  2202              MOVS     r2,#2                 ;1105
00005a  4390              BICS     r0,r0,r2              ;1105
00005c  224d              MOVS     r2,#0x4d              ;1105
00005e  0612              LSLS     r2,r2,#24             ;1105
000060  6150              STR      r0,[r2,#0x14]         ;1105
                  |L14.98|
000062  204d              MOVS     r0,#0x4d              ;1107
000064  0600              LSLS     r0,r0,#24             ;1107
000066  8980              LDRH     r0,[r0,#0xc]          ;1107
000068  2000              MOVS     r0,#0                 ;1107
00006a  224d              MOVS     r2,#0x4d              ;1107
00006c  0612              LSLS     r2,r2,#24             ;1107
00006e  8190              STRH     r0,[r2,#0xc]          ;1107
000070  bf00              NOP                            ;1108
000072  e7ed              B        |L14.80|
;;;1110   
                          ENDP

                  |L14.116|
                          DCD      0x0000a217

                          AREA ||i.MEM_ISPDRead_Cmd||, CODE, READONLY, ALIGN=2

                  MEM_ISPDRead_Cmd PROC
;;;1142    */
;;;1143   DRV_Return MEM_ISPDRead_Cmd(FunctionalState State)
000000  4601              MOV      r1,r0
;;;1144   {
;;;1145       __MEM_UnProtect();
000002  204d              MOVS     r0,#0x4d
000004  0600              LSLS     r0,r0,#24
000006  8980              LDRH     r0,[r0,#0xc]
000008  4a1a              LDR      r2,|L15.116|
00000a  4610              MOV      r0,r2
00000c  224d              MOVS     r2,#0x4d
00000e  0612              LSLS     r2,r2,#24
000010  8190              STRH     r0,[r2,#0xc]
;;;1146       __MEM_Enable();
000012  4610              MOV      r0,r2
000014  6900              LDR      r0,[r0,#0x10]
000016  2201              MOVS     r2,#1
000018  4310              ORRS     r0,r0,r2
00001a  224d              MOVS     r2,#0x4d
00001c  0612              LSLS     r2,r2,#24
00001e  6110              STR      r0,[r2,#0x10]
;;;1147   
;;;1148       if(State == ENABLE)
000020  2901              CMP      r1,#1
000022  d116              BNE      |L15.82|
;;;1149       {
;;;1150           __MEM_Access_Enable(MEM_ACCESS_ISPD_READ);
000024  4610              MOV      r0,r2
000026  6940              LDR      r0,[r0,#0x14]
000028  2208              MOVS     r2,#8
00002a  4310              ORRS     r0,r0,r2
00002c  224d              MOVS     r2,#0x4d
00002e  0612              LSLS     r2,r2,#24
000030  6150              STR      r0,[r2,#0x14]
;;;1151   
;;;1152           if((__MEM_GetAccessState(MEM_ACCESS_ISPD_READ)) == CLR)
000032  4610              MOV      r0,r2
000034  6940              LDR      r0,[r0,#0x14]
000036  2208              MOVS     r2,#8
000038  4010              ANDS     r0,r0,r2
00003a  08c0              LSRS     r0,r0,#3
00003c  2800              CMP      r0,#0
00003e  d110              BNE      |L15.98|
;;;1153           {
;;;1154               __MEM_Protect();
000040  204d              MOVS     r0,#0x4d
000042  0600              LSLS     r0,r0,#24
000044  8980              LDRH     r0,[r0,#0xc]
000046  2000              MOVS     r0,#0
000048  224d              MOVS     r2,#0x4d
00004a  0612              LSLS     r2,r2,#24
00004c  8190              STRH     r0,[r2,#0xc]
;;;1155               return DRV_Failure;
00004e  2001              MOVS     r0,#1
                  |L15.80|
;;;1156           }
;;;1157       }
;;;1158       else
;;;1159       {
;;;1160           __MEM_Access_Disable(MEM_ACCESS_ISPD_READ);
;;;1161       }
;;;1162       __MEM_Protect();
;;;1163       return DRV_Success;
;;;1164   }
000050  4770              BX       lr
                  |L15.82|
000052  204d              MOVS     r0,#0x4d              ;1160
000054  0600              LSLS     r0,r0,#24             ;1160
000056  6940              LDR      r0,[r0,#0x14]         ;1160
000058  2208              MOVS     r2,#8                 ;1160
00005a  4390              BICS     r0,r0,r2              ;1160
00005c  224d              MOVS     r2,#0x4d              ;1160
00005e  0612              LSLS     r2,r2,#24             ;1160
000060  6150              STR      r0,[r2,#0x14]         ;1160
                  |L15.98|
000062  204d              MOVS     r0,#0x4d              ;1162
000064  0600              LSLS     r0,r0,#24             ;1162
000066  8980              LDRH     r0,[r0,#0xc]          ;1162
000068  2000              MOVS     r0,#0                 ;1162
00006a  224d              MOVS     r2,#0x4d              ;1162
00006c  0612              LSLS     r2,r2,#24             ;1162
00006e  8190              STRH     r0,[r2,#0xc]          ;1162
000070  bf00              NOP                            ;1163
000072  e7ed              B        |L15.80|
;;;1165   
                          ENDP

                  |L15.116|
                          DCD      0x0000a217

                          AREA ||i.MEM_ISPDWrite_Cmd||, CODE, READONLY, ALIGN=2

                  MEM_ISPDWrite_Cmd PROC
;;;1187    */
;;;1188   DRV_Return MEM_ISPDWrite_Cmd(FunctionalState State)
000000  4601              MOV      r1,r0
;;;1189   {
;;;1190       __MEM_UnProtect();
000002  204d              MOVS     r0,#0x4d
000004  0600              LSLS     r0,r0,#24
000006  8980              LDRH     r0,[r0,#0xc]
000008  4a1a              LDR      r2,|L16.116|
00000a  4610              MOV      r0,r2
00000c  224d              MOVS     r2,#0x4d
00000e  0612              LSLS     r2,r2,#24
000010  8190              STRH     r0,[r2,#0xc]
;;;1191       __MEM_Enable();
000012  4610              MOV      r0,r2
000014  6900              LDR      r0,[r0,#0x10]
000016  2201              MOVS     r2,#1
000018  4310              ORRS     r0,r0,r2
00001a  224d              MOVS     r2,#0x4d
00001c  0612              LSLS     r2,r2,#24
00001e  6110              STR      r0,[r2,#0x10]
;;;1192   
;;;1193       if(State == ENABLE)
000020  2901              CMP      r1,#1
000022  d116              BNE      |L16.82|
;;;1194       {
;;;1195           __MEM_Access_Enable(MEM_ACCESS_ISPD_WRITE);
000024  4610              MOV      r0,r2
000026  6940              LDR      r0,[r0,#0x14]
000028  2204              MOVS     r2,#4
00002a  4310              ORRS     r0,r0,r2
00002c  224d              MOVS     r2,#0x4d
00002e  0612              LSLS     r2,r2,#24
000030  6150              STR      r0,[r2,#0x14]
;;;1196   
;;;1197           if((__MEM_GetAccessState(MEM_ACCESS_ISPD_WRITE)) == CLR)
000032  4610              MOV      r0,r2
000034  6940              LDR      r0,[r0,#0x14]
000036  2204              MOVS     r2,#4
000038  4010              ANDS     r0,r0,r2
00003a  0880              LSRS     r0,r0,#2
00003c  2800              CMP      r0,#0
00003e  d110              BNE      |L16.98|
;;;1198           {
;;;1199               __MEM_Protect();
000040  204d              MOVS     r0,#0x4d
000042  0600              LSLS     r0,r0,#24
000044  8980              LDRH     r0,[r0,#0xc]
000046  2000              MOVS     r0,#0
000048  224d              MOVS     r2,#0x4d
00004a  0612              LSLS     r2,r2,#24
00004c  8190              STRH     r0,[r2,#0xc]
;;;1200               return DRV_Failure;
00004e  2001              MOVS     r0,#1
                  |L16.80|
;;;1201           }
;;;1202       }
;;;1203       else
;;;1204       {
;;;1205           __MEM_Access_Disable(MEM_ACCESS_ISPD_WRITE);
;;;1206       }
;;;1207       __MEM_Protect();
;;;1208       return DRV_Success;
;;;1209   }
000050  4770              BX       lr
                  |L16.82|
000052  204d              MOVS     r0,#0x4d              ;1205
000054  0600              LSLS     r0,r0,#24             ;1205
000056  6940              LDR      r0,[r0,#0x14]         ;1205
000058  2204              MOVS     r2,#4                 ;1205
00005a  4390              BICS     r0,r0,r2              ;1205
00005c  224d              MOVS     r2,#0x4d              ;1205
00005e  0612              LSLS     r2,r2,#24             ;1205
000060  6150              STR      r0,[r2,#0x14]         ;1205
                  |L16.98|
000062  204d              MOVS     r0,#0x4d              ;1207
000064  0600              LSLS     r0,r0,#24             ;1207
000066  8980              LDRH     r0,[r0,#0xc]          ;1207
000068  2000              MOVS     r0,#0                 ;1207
00006a  224d              MOVS     r2,#0x4d              ;1207
00006c  0612              LSLS     r2,r2,#24             ;1207
00006e  8190              STRH     r0,[r2,#0xc]          ;1207
000070  bf00              NOP                            ;1208
000072  e7ed              B        |L16.80|
;;;1210   
                          ENDP

                  |L16.116|
                          DCD      0x0000a217

                          AREA ||i.MEM_ISPRead_Cmd||, CODE, READONLY, ALIGN=2

                  MEM_ISPRead_Cmd PROC
;;;1266    */
;;;1267   DRV_Return MEM_ISPRead_Cmd(FunctionalState State)
000000  4601              MOV      r1,r0
;;;1268   {
;;;1269       __MEM_UnProtect();
000002  204d              MOVS     r0,#0x4d
000004  0600              LSLS     r0,r0,#24
000006  8980              LDRH     r0,[r0,#0xc]
000008  4a1b              LDR      r2,|L17.120|
00000a  4610              MOV      r0,r2
00000c  224d              MOVS     r2,#0x4d
00000e  0612              LSLS     r2,r2,#24
000010  8190              STRH     r0,[r2,#0xc]
;;;1270       __MEM_Enable();
000012  4610              MOV      r0,r2
000014  6900              LDR      r0,[r0,#0x10]
000016  2201              MOVS     r2,#1
000018  4310              ORRS     r0,r0,r2
00001a  224d              MOVS     r2,#0x4d
00001c  0612              LSLS     r2,r2,#24
00001e  6110              STR      r0,[r2,#0x10]
;;;1271   
;;;1272       if(State == ENABLE)
000020  2901              CMP      r1,#1
000022  d116              BNE      |L17.82|
;;;1273       {
;;;1274           __MEM_Access_Enable(MEM_ACCESS_ISP_READ);
000024  4610              MOV      r0,r2
000026  6940              LDR      r0,[r0,#0x14]
000028  024a              LSLS     r2,r1,#9
00002a  4310              ORRS     r0,r0,r2
00002c  224d              MOVS     r2,#0x4d
00002e  0612              LSLS     r2,r2,#24
000030  6150              STR      r0,[r2,#0x14]
;;;1275   
;;;1276           if((__MEM_GetAccessState(MEM_ACCESS_ISP_READ)) == CLR)
000032  4610              MOV      r0,r2
000034  6940              LDR      r0,[r0,#0x14]
000036  024a              LSLS     r2,r1,#9
000038  4010              ANDS     r0,r0,r2
00003a  0a40              LSRS     r0,r0,#9
00003c  2800              CMP      r0,#0
00003e  d111              BNE      |L17.100|
;;;1277           {
;;;1278               __MEM_Protect();
000040  204d              MOVS     r0,#0x4d
000042  0600              LSLS     r0,r0,#24
000044  8980              LDRH     r0,[r0,#0xc]
000046  2000              MOVS     r0,#0
000048  224d              MOVS     r2,#0x4d
00004a  0612              LSLS     r2,r2,#24
00004c  8190              STRH     r0,[r2,#0xc]
;;;1279               return DRV_Failure;
00004e  2001              MOVS     r0,#1
                  |L17.80|
;;;1280           }
;;;1281       }
;;;1282       else
;;;1283       {
;;;1284           __MEM_Access_Disable(MEM_ACCESS_ISP_READ);
;;;1285       }
;;;1286       __MEM_Protect();
;;;1287       return DRV_Success;
;;;1288   }
000050  4770              BX       lr
                  |L17.82|
000052  204d              MOVS     r0,#0x4d              ;1284
000054  0600              LSLS     r0,r0,#24             ;1284
000056  6940              LDR      r0,[r0,#0x14]         ;1284
000058  2201              MOVS     r2,#1                 ;1284
00005a  0252              LSLS     r2,r2,#9              ;1284
00005c  4390              BICS     r0,r0,r2              ;1284
00005e  224d              MOVS     r2,#0x4d              ;1284
000060  0612              LSLS     r2,r2,#24             ;1284
000062  6150              STR      r0,[r2,#0x14]         ;1284
                  |L17.100|
000064  204d              MOVS     r0,#0x4d              ;1286
000066  0600              LSLS     r0,r0,#24             ;1286
000068  8980              LDRH     r0,[r0,#0xc]          ;1286
00006a  2000              MOVS     r0,#0                 ;1286
00006c  224d              MOVS     r2,#0x4d              ;1286
00006e  0612              LSLS     r2,r2,#24             ;1286
000070  8190              STRH     r0,[r2,#0xc]          ;1286
000072  bf00              NOP                            ;1287
000074  e7ec              B        |L17.80|
;;;1289   
                          ENDP

000076  0000              DCW      0x0000
                  |L17.120|
                          DCD      0x0000a217

                          AREA ||i.MEM_ISPWrite_Cmd||, CODE, READONLY, ALIGN=2

                  MEM_ISPWrite_Cmd PROC
;;;1314    */
;;;1315   DRV_Return MEM_ISPWrite_Cmd(FunctionalState State)
000000  4601              MOV      r1,r0
;;;1316   {
;;;1317       __MEM_UnProtect();
000002  204d              MOVS     r0,#0x4d
000004  0600              LSLS     r0,r0,#24
000006  8980              LDRH     r0,[r0,#0xc]
000008  4a1b              LDR      r2,|L18.120|
00000a  4610              MOV      r0,r2
00000c  224d              MOVS     r2,#0x4d
00000e  0612              LSLS     r2,r2,#24
000010  8190              STRH     r0,[r2,#0xc]
;;;1318       __MEM_Enable();
000012  4610              MOV      r0,r2
000014  6900              LDR      r0,[r0,#0x10]
000016  2201              MOVS     r2,#1
000018  4310              ORRS     r0,r0,r2
00001a  224d              MOVS     r2,#0x4d
00001c  0612              LSLS     r2,r2,#24
00001e  6110              STR      r0,[r2,#0x10]
;;;1319   
;;;1320       if(State == ENABLE)
000020  2901              CMP      r1,#1
000022  d116              BNE      |L18.82|
;;;1321       {
;;;1322           __MEM_Access_Enable(MEM_ACCESS_ISP_WRITE);
000024  4610              MOV      r0,r2
000026  6940              LDR      r0,[r0,#0x14]
000028  020a              LSLS     r2,r1,#8
00002a  4310              ORRS     r0,r0,r2
00002c  224d              MOVS     r2,#0x4d
00002e  0612              LSLS     r2,r2,#24
000030  6150              STR      r0,[r2,#0x14]
;;;1323   
;;;1324           if((__MEM_GetAccessState(MEM_ACCESS_ISP_WRITE)) == CLR)
000032  4610              MOV      r0,r2
000034  6940              LDR      r0,[r0,#0x14]
000036  020a              LSLS     r2,r1,#8
000038  4010              ANDS     r0,r0,r2
00003a  0a00              LSRS     r0,r0,#8
00003c  2800              CMP      r0,#0
00003e  d111              BNE      |L18.100|
;;;1325           {
;;;1326               __MEM_Protect();
000040  204d              MOVS     r0,#0x4d
000042  0600              LSLS     r0,r0,#24
000044  8980              LDRH     r0,[r0,#0xc]
000046  2000              MOVS     r0,#0
000048  224d              MOVS     r2,#0x4d
00004a  0612              LSLS     r2,r2,#24
00004c  8190              STRH     r0,[r2,#0xc]
;;;1327               return DRV_Failure;
00004e  2001              MOVS     r0,#1
                  |L18.80|
;;;1328           }
;;;1329       }
;;;1330       else
;;;1331       {
;;;1332           __MEM_Access_Disable(MEM_ACCESS_ISP_WRITE);
;;;1333       }
;;;1334       __MEM_Protect();
;;;1335       return DRV_Success;
;;;1336   }
000050  4770              BX       lr
                  |L18.82|
000052  204d              MOVS     r0,#0x4d              ;1332
000054  0600              LSLS     r0,r0,#24             ;1332
000056  6940              LDR      r0,[r0,#0x14]         ;1332
000058  22ff              MOVS     r2,#0xff              ;1332
00005a  3201              ADDS     r2,#1                 ;1332
00005c  4390              BICS     r0,r0,r2              ;1332
00005e  224d              MOVS     r2,#0x4d              ;1332
000060  0612              LSLS     r2,r2,#24             ;1332
000062  6150              STR      r0,[r2,#0x14]         ;1332
                  |L18.100|
000064  204d              MOVS     r0,#0x4d              ;1334
000066  0600              LSLS     r0,r0,#24             ;1334
000068  8980              LDRH     r0,[r0,#0xc]          ;1334
00006a  2000              MOVS     r0,#0                 ;1334
00006c  224d              MOVS     r2,#0x4d              ;1334
00006e  0612              LSLS     r2,r2,#24             ;1334
000070  8190              STRH     r0,[r2,#0xc]          ;1334
000072  bf00              NOP                            ;1335
000074  e7ec              B        |L18.80|
;;;1337   
                          ENDP

000076  0000              DCW      0x0000
                  |L18.120|
                          DCD      0x0000a217

                          AREA ||i.MEM_ITEA_Cmd||, CODE, READONLY, ALIGN=2

                  MEM_ITEA_Cmd PROC
;;;292     */
;;;293    void MEM_ITEA_Cmd(FunctionalState State)
000000  b510              PUSH     {r4,lr}
;;;294    {
000002  4604              MOV      r4,r0
;;;295        UnProtectModuleReg(MEMprotect);
000004  480c              LDR      r0,|L19.56|
000006  f7fffffe          BL       UnProtectModuleReg
;;;296        if(State == ENABLE)
00000a  2c01              CMP      r4,#1
00000c  d108              BNE      |L19.32|
;;;297            MEM->INT.B[0] |= MEM_INT_IEA_mask_b0;
00000e  204d              MOVS     r0,#0x4d
000010  0600              LSLS     r0,r0,#24
000012  7900              LDRB     r0,[r0,#4]
000014  2101              MOVS     r1,#1
000016  4308              ORRS     r0,r0,r1
000018  214d              MOVS     r1,#0x4d
00001a  0609              LSLS     r1,r1,#24
00001c  7108              STRB     r0,[r1,#4]
00001e  e007              B        |L19.48|
                  |L19.32|
;;;298        else
;;;299            MEM->INT.B[0] &= ~MEM_INT_IEA_mask_b0;
000020  204d              MOVS     r0,#0x4d
000022  0600              LSLS     r0,r0,#24
000024  7900              LDRB     r0,[r0,#4]
000026  0840              LSRS     r0,r0,#1
000028  0040              LSLS     r0,r0,#1
00002a  214d              MOVS     r1,#0x4d
00002c  0609              LSLS     r1,r1,#24
00002e  7108              STRB     r0,[r1,#4]
                  |L19.48|
;;;300        ProtectModuleReg(MEMprotect);
000030  4801              LDR      r0,|L19.56|
000032  f7fffffe          BL       ProtectModuleReg
;;;301    }
000036  bd10              POP      {r4,pc}
;;;302    
                          ENDP

                  |L19.56|
                          DCD      0x4d00000c

                          AREA ||i.MEM_IT_Cmd||, CODE, READONLY, ALIGN=2

                  MEM_IT_Cmd PROC
;;;260     */
;;;261    void MEM_IT_Cmd(uint32_t MEM_IT, FunctionalState State)
000000  b570              PUSH     {r4-r6,lr}
;;;262    {	
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;263        UnProtectModuleReg(MEMprotect);
000006  480c              LDR      r0,|L20.56|
000008  f7fffffe          BL       UnProtectModuleReg
;;;264    	if(State==DISABLE)
00000c  2d00              CMP      r5,#0
00000e  d107              BNE      |L20.32|
;;;265    		MEM->INT.W &= (~MEM_IT);
000010  204d              MOVS     r0,#0x4d
000012  0600              LSLS     r0,r0,#24
000014  6840              LDR      r0,[r0,#4]
000016  43a0              BICS     r0,r0,r4
000018  214d              MOVS     r1,#0x4d
00001a  0609              LSLS     r1,r1,#24
00001c  6048              STR      r0,[r1,#4]
00001e  e006              B        |L20.46|
                  |L20.32|
;;;266    	else
;;;267    		MEM->INT.W |= MEM_IT;
000020  204d              MOVS     r0,#0x4d
000022  0600              LSLS     r0,r0,#24
000024  6840              LDR      r0,[r0,#4]
000026  4320              ORRS     r0,r0,r4
000028  214d              MOVS     r1,#0x4d
00002a  0609              LSLS     r1,r1,#24
00002c  6048              STR      r0,[r1,#4]
                  |L20.46|
;;;268        ProtectModuleReg(MEMprotect);
00002e  4802              LDR      r0,|L20.56|
000030  f7fffffe          BL       ProtectModuleReg
;;;269    }
000034  bd70              POP      {r4-r6,pc}
;;;270    
                          ENDP

000036  0000              DCW      0x0000
                  |L20.56|
                          DCD      0x4d00000c

                          AREA ||i.MEM_SetFlashWaitState||, CODE, READONLY, ALIGN=2

                  MEM_SetFlashWaitState PROC
;;;212     */
;;;213    void MEM_SetFlashWaitState(uint32_t MEM_FWAIT)
000000  b510              PUSH     {r4,lr}
;;;214    {  
000002  4604              MOV      r4,r0
;;;215        UnProtectModuleReg(MEMprotect);
000004  4808              LDR      r0,|L21.40|
000006  f7fffffe          BL       UnProtectModuleReg
;;;216        MEM->CR0.W = (MEM->CR0.W & (~MEM_CR0_FWAIT_mask_w)) | MEM_FWAIT;
00000a  204d              MOVS     r0,#0x4d
00000c  0600              LSLS     r0,r0,#24
00000e  6900              LDR      r0,[r0,#0x10]
000010  2103              MOVS     r1,#3
000012  0309              LSLS     r1,r1,#12
000014  4388              BICS     r0,r0,r1
000016  4320              ORRS     r0,r0,r4
000018  214d              MOVS     r1,#0x4d
00001a  0609              LSLS     r1,r1,#24
00001c  6108              STR      r0,[r1,#0x10]
;;;217        ProtectModuleReg(MEMprotect);
00001e  4802              LDR      r0,|L21.40|
000020  f7fffffe          BL       ProtectModuleReg
;;;218    }
000024  bd10              POP      {r4,pc}
;;;219    
                          ENDP

000026  0000              DCW      0x0000
                  |L21.40|
                          DCD      0x4d00000c

                          AREA ||i.MEM_SetIAPSize||, CODE, READONLY, ALIGN=2

                  MEM_SetIAPSize PROC
;;;930     */
;;;931    DRV_Return MEM_SetIAPSize(uint32_t IAPSize)
000000  b570              PUSH     {r4-r6,lr}
;;;932    {
000002  4604              MOV      r4,r0
;;;933        uint32_t lTemp = (IAPSize >> 2);
000004  08a5              LSRS     r5,r4,#2
;;;934        uint32_t lRegIAPSZ = MEM->IAPSZ.W;
000006  204d              MOVS     r0,#0x4d
000008  0600              LSLS     r0,r0,#24
00000a  6a86              LDR      r6,[r0,#0x28]
;;;935    
;;;936        if(MEM->CR0.MBIT.IAP_AEN == 0)
00000c  7c80              LDRB     r0,[r0,#0x12]
00000e  0680              LSLS     r0,r0,#26
000010  0fc0              LSRS     r0,r0,#31
000012  2800              CMP      r0,#0
000014  d101              BNE      |L22.26|
;;;937            return (DRV_Failure);
000016  2001              MOVS     r0,#1
                  |L22.24|
;;;938    
;;;939      #if defined(MG32_1ST) || defined(MG32_2ND)
;;;940        if((IAPSize % 1024) != 0)
;;;941        {
;;;942            lTemp += 0x100;
;;;943        }
;;;944      #endif
;;;945      #if defined(MG32_3RD)
;;;946        if((IAPSize % 512) != 0)
;;;947        {
;;;948            lTemp += 0x100;
;;;949        }
;;;950      #endif
;;;951        MEM_ClearFlag(MEM_FLAG_IAPSEF);
;;;952    
;;;953        UnProtectModuleReg(MEMprotect);
;;;954        MEM->IAPSZ.W = lTemp;
;;;955        ProtectModuleReg(MEMprotect);
;;;956    
;;;957        if(MEM_GetFlagStatus(MEM_FLAG_IAPSEF) || (MEM_GetIAPSize() != (lTemp << 2)))
;;;958        {
;;;959            UnProtectModuleReg(MEMprotect);
;;;960            MEM->IAPSZ.W = lRegIAPSZ;
;;;961            ProtectModuleReg(MEMprotect);
;;;962            return (DRV_Failure);
;;;963        }
;;;964        return (DRV_Success);
;;;965    }
000018  bd70              POP      {r4-r6,pc}
                  |L22.26|
00001a  05a0              LSLS     r0,r4,#22             ;940
00001c  0d80              LSRS     r0,r0,#22             ;940
00001e  2800              CMP      r0,#0                 ;940
000020  d001              BEQ      |L22.38|
000022  35ff              ADDS     r5,r5,#0xff           ;942
000024  3501              ADDS     r5,#1                 ;942
                  |L22.38|
000026  2001              MOVS     r0,#1                 ;951
000028  0400              LSLS     r0,r0,#16             ;951
00002a  f7fffffe          BL       MEM_ClearFlag
00002e  4810              LDR      r0,|L22.112|
000030  f7fffffe          BL       UnProtectModuleReg
000034  204d              MOVS     r0,#0x4d              ;954
000036  0600              LSLS     r0,r0,#24             ;954
000038  6285              STR      r5,[r0,#0x28]         ;954
00003a  480d              LDR      r0,|L22.112|
00003c  f7fffffe          BL       ProtectModuleReg
000040  2001              MOVS     r0,#1                 ;957
000042  0400              LSLS     r0,r0,#16             ;957
000044  f7fffffe          BL       MEM_GetFlagStatus
000048  2800              CMP      r0,#0                 ;957
00004a  d104              BNE      |L22.86|
00004c  f7fffffe          BL       MEM_GetIAPSize
000050  00a9              LSLS     r1,r5,#2              ;957
000052  4288              CMP      r0,r1                 ;957
000054  d00a              BEQ      |L22.108|
                  |L22.86|
000056  4806              LDR      r0,|L22.112|
000058  f7fffffe          BL       UnProtectModuleReg
00005c  204d              MOVS     r0,#0x4d              ;960
00005e  0600              LSLS     r0,r0,#24             ;960
000060  6286              STR      r6,[r0,#0x28]         ;960
000062  4803              LDR      r0,|L22.112|
000064  f7fffffe          BL       ProtectModuleReg
000068  2001              MOVS     r0,#1                 ;962
00006a  e7d5              B        |L22.24|
                  |L22.108|
00006c  2000              MOVS     r0,#0                 ;964
00006e  e7d3              B        |L22.24|
;;;966    
                          ENDP

                  |L22.112|
                          DCD      0x4d00000c

                          AREA ||i.MEM_SetIAPSizeLock||, CODE, READONLY, ALIGN=2

                  MEM_SetIAPSizeLock PROC
;;;990     */
;;;991    DRV_Return MEM_SetIAPSizeLock(void)
000000  b510              PUSH     {r4,lr}
;;;992    {
;;;993        UnProtectModuleReg(MEMprotect);
000002  480c              LDR      r0,|L23.52|
000004  f7fffffe          BL       UnProtectModuleReg
;;;994        MEM->CR0.MBIT.IAP_AEN = 0;
000008  204d              MOVS     r0,#0x4d
00000a  0600              LSLS     r0,r0,#24
00000c  7c80              LDRB     r0,[r0,#0x12]
00000e  2120              MOVS     r1,#0x20
000010  4388              BICS     r0,r0,r1
000012  214d              MOVS     r1,#0x4d
000014  0609              LSLS     r1,r1,#24
000016  7488              STRB     r0,[r1,#0x12]
;;;995        ProtectModuleReg(MEMprotect);
000018  4806              LDR      r0,|L23.52|
00001a  f7fffffe          BL       ProtectModuleReg
;;;996        
;;;997        if(MEM->CR0.MBIT.IAP_AEN != 0)
00001e  204d              MOVS     r0,#0x4d
000020  0600              LSLS     r0,r0,#24
000022  7c80              LDRB     r0,[r0,#0x12]
000024  0680              LSLS     r0,r0,#26
000026  0fc0              LSRS     r0,r0,#31
000028  2800              CMP      r0,#0
00002a  d001              BEQ      |L23.48|
;;;998            return (DRV_Failure);
00002c  2001              MOVS     r0,#1
                  |L23.46|
;;;999    
;;;1000       return (DRV_Success);
;;;1001   }
00002e  bd10              POP      {r4,pc}
                  |L23.48|
000030  2000              MOVS     r0,#0                 ;1000
000032  e7fc              B        |L23.46|
;;;1002   
                          ENDP

                  |L23.52|
                          DCD      0x4d00000c

                          AREA ||i.MEM_SetISPMultiplePageEraseUnProtect||, CODE, READONLY, ALIGN=2

                  MEM_SetISPMultiplePageEraseUnProtect PROC
;;;1382    */
;;;1383   void MEM_SetISPMultiplePageEraseUnProtect(void)
000000  204d              MOVS     r0,#0x4d
;;;1384   {
;;;1385       __MEM_UnProtect();
000002  0600              LSLS     r0,r0,#24
000004  8980              LDRH     r0,[r0,#0xc]
000006  4915              LDR      r1,|L24.92|
000008  4608              MOV      r0,r1
00000a  214d              MOVS     r1,#0x4d
00000c  0609              LSLS     r1,r1,#24
00000e  8188              STRH     r0,[r1,#0xc]
;;;1386       __MEM_Access_Enable(MEM_ACCESS_ISP_READ | MEM_ACCESS_ISP_WRITE);
000010  4608              MOV      r0,r1
000012  6940              LDR      r0,[r0,#0x14]
000014  2103              MOVS     r1,#3
000016  0209              LSLS     r1,r1,#8
000018  4308              ORRS     r0,r0,r1
00001a  214d              MOVS     r1,#0x4d
00001c  0609              LSLS     r1,r1,#24
00001e  6148              STR      r0,[r1,#0x14]
;;;1387       __MEM_SetWriteMode(ISPErase);
000020  4608              MOV      r0,r1
000022  6900              LDR      r0,[r0,#0x10]
000024  21f0              MOVS     r1,#0xf0
000026  4388              BICS     r0,r0,r1
000028  3060              ADDS     r0,r0,#0x60
00002a  214d              MOVS     r1,#0x4d
00002c  0609              LSLS     r1,r1,#24
00002e  6108              STR      r0,[r1,#0x10]
;;;1388       __MEM_UnProtect2();
000030  4608              MOV      r0,r1
000032  89c0              LDRH     r0,[r0,#0xe]
000034  4909              LDR      r1,|L24.92|
000036  204d              MOVS     r0,#0x4d
000038  0600              LSLS     r0,r0,#24
00003a  81c1              STRH     r1,[r0,#0xe]
;;;1389       __MEM_ISPMultipleWriteUnProtect();
00003c  4908              LDR      r1,|L24.96|
00003e  83c1              STRH     r1,[r0,#0x1e]
000040  4908              LDR      r1,|L24.100|
000042  83c1              STRH     r1,[r0,#0x1e]
;;;1390       __MEM_UnProtect2();
000044  89c0              LDRH     r0,[r0,#0xe]
000046  4905              LDR      r1,|L24.92|
000048  204d              MOVS     r0,#0x4d
00004a  0600              LSLS     r0,r0,#24
00004c  81c1              STRH     r1,[r0,#0xe]
;;;1391       __MEM_Protect();
00004e  8980              LDRH     r0,[r0,#0xc]
000050  2000              MOVS     r0,#0
000052  214d              MOVS     r1,#0x4d
000054  0609              LSLS     r1,r1,#24
000056  8188              STRH     r0,[r1,#0xc]
;;;1392   }
000058  4770              BX       lr
;;;1393   
                          ENDP

00005a  0000              DCW      0x0000
                  |L24.92|
                          DCD      0x0000a217
                  |L24.96|
                          DCD      0x00009867
                  |L24.100|
                          DCD      0x0000beaa

                          AREA ||i.MEM_SetISPMultipleProgramUnProtect||, CODE, READONLY, ALIGN=2

                  MEM_SetISPMultipleProgramUnProtect PROC
;;;1436    */
;;;1437   void MEM_SetISPMultipleProgramUnProtect(void)
000000  204d              MOVS     r0,#0x4d
;;;1438   {
;;;1439       __MEM_UnProtect();
000002  0600              LSLS     r0,r0,#24
000004  8980              LDRH     r0,[r0,#0xc]
000006  4914              LDR      r1,|L25.88|
000008  4608              MOV      r0,r1
00000a  214d              MOVS     r1,#0x4d
00000c  0609              LSLS     r1,r1,#24
00000e  8188              STRH     r0,[r1,#0xc]
;;;1440       __MEM_Access_Enable(MEM_ACCESS_ISP_READ | MEM_ACCESS_ISP_WRITE);
000010  4608              MOV      r0,r1
000012  6940              LDR      r0,[r0,#0x14]
000014  2103              MOVS     r1,#3
000016  0209              LSLS     r1,r1,#8
000018  4308              ORRS     r0,r0,r1
00001a  214d              MOVS     r1,#0x4d
00001c  0609              LSLS     r1,r1,#24
00001e  6148              STR      r0,[r1,#0x14]
;;;1441       __MEM_SetWriteMode(ISPProgram);
000020  4608              MOV      r0,r1
000022  6900              LDR      r0,[r0,#0x10]
000024  21f0              MOVS     r1,#0xf0
000026  4388              BICS     r0,r0,r1
000028  3050              ADDS     r0,r0,#0x50
00002a  214d              MOVS     r1,#0x4d
00002c  0609              LSLS     r1,r1,#24
00002e  6108              STR      r0,[r1,#0x10]
;;;1442       __MEM_UnProtect2();
000030  4608              MOV      r0,r1
000032  89c0              LDRH     r0,[r0,#0xe]
000034  4908              LDR      r1,|L25.88|
000036  204d              MOVS     r0,#0x4d
000038  0600              LSLS     r0,r0,#24
00003a  81c1              STRH     r1,[r0,#0xe]
;;;1443       __MEM_ISPMultipleWriteUnProtect();
00003c  4907              LDR      r1,|L25.92|
00003e  83c1              STRH     r1,[r0,#0x1e]
000040  4907              LDR      r1,|L25.96|
000042  83c1              STRH     r1,[r0,#0x1e]
;;;1444       __MEM_Protect2();
000044  89c0              LDRH     r0,[r0,#0xe]
000046  2000              MOVS     r0,#0
000048  214d              MOVS     r1,#0x4d
00004a  0609              LSLS     r1,r1,#24
00004c  81c8              STRH     r0,[r1,#0xe]
;;;1445       __MEM_Protect();
00004e  4608              MOV      r0,r1
000050  8980              LDRH     r0,[r0,#0xc]
000052  2000              MOVS     r0,#0
000054  8188              STRH     r0,[r1,#0xc]
;;;1446   }
000056  4770              BX       lr
;;;1447   
                          ENDP

                  |L25.88|
                          DCD      0x0000a217
                  |L25.92|
                          DCD      0x00009867
                  |L25.96|
                          DCD      0x0000beaa

                          AREA ||i.MEM_SetISPMultipleWriteProtect||, CODE, READONLY, ALIGN=2

                  MEM_SetISPMultipleWriteProtect PROC
;;;1464    */
;;;1465   void MEM_SetISPMultipleWriteProtect(void)
000000  204d              MOVS     r0,#0x4d
;;;1466   {
;;;1467       __MEM_UnProtect();
000002  0600              LSLS     r0,r0,#24
000004  8980              LDRH     r0,[r0,#0xc]
000006  490b              LDR      r1,|L26.52|
000008  4608              MOV      r0,r1
00000a  214d              MOVS     r1,#0x4d
00000c  0609              LSLS     r1,r1,#24
00000e  8188              STRH     r0,[r1,#0xc]
;;;1468       __MEM_UnProtect2();
000010  4608              MOV      r0,r1
000012  89c0              LDRH     r0,[r0,#0xe]
000014  4907              LDR      r1,|L26.52|
000016  204d              MOVS     r0,#0x4d
000018  0600              LSLS     r0,r0,#24
00001a  81c1              STRH     r1,[r0,#0xe]
;;;1469       __MEM_ISPMultipleWriteProtect();
00001c  2100              MOVS     r1,#0
00001e  83c1              STRH     r1,[r0,#0x1e]
;;;1470       __MEM_Protect2();
000020  89c0              LDRH     r0,[r0,#0xe]
000022  2000              MOVS     r0,#0
000024  214d              MOVS     r1,#0x4d
000026  0609              LSLS     r1,r1,#24
000028  81c8              STRH     r0,[r1,#0xe]
;;;1471       __MEM_Protect();
00002a  4608              MOV      r0,r1
00002c  8980              LDRH     r0,[r0,#0xc]
00002e  2000              MOVS     r0,#0
000030  8188              STRH     r0,[r1,#0xc]
;;;1472   }
000032  4770              BX       lr
;;;1473   
                          ENDP

                  |L26.52|
                          DCD      0x0000a217

                          AREA ||i.MEM_SetISPSinglePageEraseUnProtect||, CODE, READONLY, ALIGN=2

                  MEM_SetISPSinglePageEraseUnProtect PROC
;;;1354    */
;;;1355   void MEM_SetISPSinglePageEraseUnProtect(void)
000000  204d              MOVS     r0,#0x4d
;;;1356   {
;;;1357       __MEM_UnProtect();
000002  0600              LSLS     r0,r0,#24
000004  8980              LDRH     r0,[r0,#0xc]
000006  4915              LDR      r1,|L27.92|
000008  4608              MOV      r0,r1
00000a  214d              MOVS     r1,#0x4d
00000c  0609              LSLS     r1,r1,#24
00000e  8188              STRH     r0,[r1,#0xc]
;;;1358       __MEM_Access_Enable(MEM_ACCESS_ISP_READ | MEM_ACCESS_ISP_WRITE);
000010  4608              MOV      r0,r1
000012  6940              LDR      r0,[r0,#0x14]
000014  2103              MOVS     r1,#3
000016  0209              LSLS     r1,r1,#8
000018  4308              ORRS     r0,r0,r1
00001a  214d              MOVS     r1,#0x4d
00001c  0609              LSLS     r1,r1,#24
00001e  6148              STR      r0,[r1,#0x14]
;;;1359       __MEM_SetWriteMode(ISPErase);
000020  4608              MOV      r0,r1
000022  6900              LDR      r0,[r0,#0x10]
000024  21f0              MOVS     r1,#0xf0
000026  4388              BICS     r0,r0,r1
000028  3060              ADDS     r0,r0,#0x60
00002a  214d              MOVS     r1,#0x4d
00002c  0609              LSLS     r1,r1,#24
00002e  6108              STR      r0,[r1,#0x10]
;;;1360       __MEM_UnProtect2();
000030  4608              MOV      r0,r1
000032  89c0              LDRH     r0,[r0,#0xe]
000034  4909              LDR      r1,|L27.92|
000036  204d              MOVS     r0,#0x4d
000038  0600              LSLS     r0,r0,#24
00003a  81c1              STRH     r1,[r0,#0xe]
;;;1361       __MEM_ISPSingleWriteUnProtect();
00003c  4908              LDR      r1,|L27.96|
00003e  83c1              STRH     r1,[r0,#0x1e]
000040  4908              LDR      r1,|L27.100|
000042  83c1              STRH     r1,[r0,#0x1e]
;;;1362       __MEM_UnProtect2();
000044  89c0              LDRH     r0,[r0,#0xe]
000046  4905              LDR      r1,|L27.92|
000048  204d              MOVS     r0,#0x4d
00004a  0600              LSLS     r0,r0,#24
00004c  81c1              STRH     r1,[r0,#0xe]
;;;1363       __MEM_Protect();
00004e  8980              LDRH     r0,[r0,#0xc]
000050  2000              MOVS     r0,#0
000052  214d              MOVS     r1,#0x4d
000054  0609              LSLS     r1,r1,#24
000056  8188              STRH     r0,[r1,#0xc]
;;;1364   }
000058  4770              BX       lr
;;;1365   
                          ENDP

00005a  0000              DCW      0x0000
                  |L27.92|
                          DCD      0x0000a217
                  |L27.96|
                          DCD      0x00009867
                  |L27.100|
                          DCD      0x0000b955

                          AREA ||i.MEM_SetISPSingleProgramUnProtect||, CODE, READONLY, ALIGN=2

                  MEM_SetISPSingleProgramUnProtect PROC
;;;1410    */
;;;1411   void MEM_SetISPSingleProgramUnProtect(void)
000000  204d              MOVS     r0,#0x4d
;;;1412   {
;;;1413       __MEM_UnProtect();
000002  0600              LSLS     r0,r0,#24
000004  8980              LDRH     r0,[r0,#0xc]
000006  4915              LDR      r1,|L28.92|
000008  4608              MOV      r0,r1
00000a  214d              MOVS     r1,#0x4d
00000c  0609              LSLS     r1,r1,#24
00000e  8188              STRH     r0,[r1,#0xc]
;;;1414       __MEM_Access_Enable(MEM_ACCESS_ISP_READ | MEM_ACCESS_ISP_WRITE);
000010  4608              MOV      r0,r1
000012  6940              LDR      r0,[r0,#0x14]
000014  2103              MOVS     r1,#3
000016  0209              LSLS     r1,r1,#8
000018  4308              ORRS     r0,r0,r1
00001a  214d              MOVS     r1,#0x4d
00001c  0609              LSLS     r1,r1,#24
00001e  6148              STR      r0,[r1,#0x14]
;;;1415       __MEM_SetWriteMode(ISPProgram);
000020  4608              MOV      r0,r1
000022  6900              LDR      r0,[r0,#0x10]
000024  21f0              MOVS     r1,#0xf0
000026  4388              BICS     r0,r0,r1
000028  3050              ADDS     r0,r0,#0x50
00002a  214d              MOVS     r1,#0x4d
00002c  0609              LSLS     r1,r1,#24
00002e  6108              STR      r0,[r1,#0x10]
;;;1416       __MEM_UnProtect2();
000030  4608              MOV      r0,r1
000032  89c0              LDRH     r0,[r0,#0xe]
000034  4909              LDR      r1,|L28.92|
000036  204d              MOVS     r0,#0x4d
000038  0600              LSLS     r0,r0,#24
00003a  81c1              STRH     r1,[r0,#0xe]
;;;1417       __MEM_ISPSingleWriteUnProtect();
00003c  4908              LDR      r1,|L28.96|
00003e  83c1              STRH     r1,[r0,#0x1e]
000040  4908              LDR      r1,|L28.100|
000042  83c1              STRH     r1,[r0,#0x1e]
;;;1418       __MEM_UnProtect2();
000044  89c0              LDRH     r0,[r0,#0xe]
000046  4905              LDR      r1,|L28.92|
000048  204d              MOVS     r0,#0x4d
00004a  0600              LSLS     r0,r0,#24
00004c  81c1              STRH     r1,[r0,#0xe]
;;;1419       __MEM_Protect();
00004e  8980              LDRH     r0,[r0,#0xc]
000050  2000              MOVS     r0,#0
000052  214d              MOVS     r1,#0x4d
000054  0609              LSLS     r1,r1,#24
000056  8188              STRH     r0,[r1,#0xc]
;;;1420   }
000058  4770              BX       lr
;;;1421   
                          ENDP

00005a  0000              DCW      0x0000
                  |L28.92|
                          DCD      0x0000a217
                  |L28.96|
                          DCD      0x00009867
                  |L28.100|
                          DCD      0x0000b955

                          AREA ||i.MEM_SetMultiplePageEraseUnProtect||, CODE, READONLY, ALIGN=2

                  MEM_SetMultiplePageEraseUnProtect PROC
;;;731     */
;;;732    void MEM_SetMultiplePageEraseUnProtect(void)
000000  204d              MOVS     r0,#0x4d
;;;733    {
;;;734        __MEM_UnProtect();
000002  0600              LSLS     r0,r0,#24
000004  8980              LDRH     r0,[r0,#0xc]
000006  490b              LDR      r1,|L29.52|
000008  4608              MOV      r0,r1
00000a  214d              MOVS     r1,#0x4d
00000c  0609              LSLS     r1,r1,#24
00000e  8188              STRH     r0,[r1,#0xc]
;;;735        __MEM_SetWriteMode(Erase);
000010  4608              MOV      r0,r1
000012  6900              LDR      r0,[r0,#0x10]
000014  21f0              MOVS     r1,#0xf0
000016  4388              BICS     r0,r0,r1
000018  3020              ADDS     r0,r0,#0x20
00001a  214d              MOVS     r1,#0x4d
00001c  0609              LSLS     r1,r1,#24
00001e  6108              STR      r0,[r1,#0x10]
;;;736        __MEM_MultipleWriteUnProtect();
000020  2046              MOVS     r0,#0x46
000022  7708              STRB     r0,[r1,#0x1c]
000024  20be              MOVS     r0,#0xbe
000026  8388              STRH     r0,[r1,#0x1c]
;;;737        __MEM_Protect();
000028  4608              MOV      r0,r1
00002a  8980              LDRH     r0,[r0,#0xc]
00002c  2000              MOVS     r0,#0
00002e  8188              STRH     r0,[r1,#0xc]
;;;738    }
000030  4770              BX       lr
;;;739    
                          ENDP

000032  0000              DCW      0x0000
                  |L29.52|
                          DCD      0x0000a217

                          AREA ||i.MEM_SetMultipleProgramUnProtect||, CODE, READONLY, ALIGN=2

                  MEM_SetMultipleProgramUnProtect PROC
;;;781     */
;;;782    void MEM_SetMultipleProgramUnProtect(void)
000000  204d              MOVS     r0,#0x4d
;;;783    {
;;;784        __MEM_UnProtect();
000002  0600              LSLS     r0,r0,#24
000004  8980              LDRH     r0,[r0,#0xc]
000006  490b              LDR      r1,|L30.52|
000008  4608              MOV      r0,r1
00000a  214d              MOVS     r1,#0x4d
00000c  0609              LSLS     r1,r1,#24
00000e  8188              STRH     r0,[r1,#0xc]
;;;785        __MEM_SetWriteMode(Program);
000010  4608              MOV      r0,r1
000012  6900              LDR      r0,[r0,#0x10]
000014  21f0              MOVS     r1,#0xf0
000016  4388              BICS     r0,r0,r1
000018  3010              ADDS     r0,r0,#0x10
00001a  214d              MOVS     r1,#0x4d
00001c  0609              LSLS     r1,r1,#24
00001e  6108              STR      r0,[r1,#0x10]
;;;786        __MEM_MultipleWriteUnProtect();
000020  2046              MOVS     r0,#0x46
000022  7708              STRB     r0,[r1,#0x1c]
000024  20be              MOVS     r0,#0xbe
000026  8388              STRH     r0,[r1,#0x1c]
;;;787        __MEM_Protect();
000028  4608              MOV      r0,r1
00002a  8980              LDRH     r0,[r0,#0xc]
00002c  2000              MOVS     r0,#0
00002e  8188              STRH     r0,[r1,#0xc]
;;;788    }
000030  4770              BX       lr
;;;789    
                          ENDP

000032  0000              DCW      0x0000
                  |L30.52|
                          DCD      0x0000a217

                          AREA ||i.MEM_SetMultipleWriteProtect||, CODE, READONLY, ALIGN=2

                  MEM_SetMultipleWriteProtect PROC
;;;808     */
;;;809    void MEM_SetMultipleWriteProtect(void)
000000  204d              MOVS     r0,#0x4d
;;;810    {
;;;811        __MEM_UnProtect();
000002  0600              LSLS     r0,r0,#24
000004  8980              LDRH     r0,[r0,#0xc]
000006  490c              LDR      r1,|L31.56|
000008  4608              MOV      r0,r1
00000a  214d              MOVS     r1,#0x4d
00000c  0609              LSLS     r1,r1,#24
00000e  8188              STRH     r0,[r1,#0xc]
;;;812        __MEM_UnProtect2();
000010  4608              MOV      r0,r1
000012  89c0              LDRH     r0,[r0,#0xe]
000014  4908              LDR      r1,|L31.56|
000016  204d              MOVS     r0,#0x4d
000018  0600              LSLS     r0,r0,#24
00001a  81c1              STRH     r1,[r0,#0xe]
;;;813        __MEM_MultipleWriteProtect();
00001c  2000              MOVS     r0,#0
00001e  214d              MOVS     r1,#0x4d
000020  0609              LSLS     r1,r1,#24
000022  7708              STRB     r0,[r1,#0x1c]
;;;814        __MEM_Protect2();
000024  4608              MOV      r0,r1
000026  89c0              LDRH     r0,[r0,#0xe]
000028  2000              MOVS     r0,#0
00002a  81c8              STRH     r0,[r1,#0xe]
;;;815        __MEM_Protect();
00002c  4608              MOV      r0,r1
00002e  8980              LDRH     r0,[r0,#0xc]
000030  2000              MOVS     r0,#0
000032  8188              STRH     r0,[r1,#0xc]
;;;816    }
000034  4770              BX       lr
;;;817    
                          ENDP

000036  0000              DCW      0x0000
                  |L31.56|
                          DCD      0x0000a217

                          AREA ||i.MEM_SetSinglePageEraseUnProtect||, CODE, READONLY, ALIGN=2

                  MEM_SetSinglePageEraseUnProtect PROC
;;;706     */
;;;707    void MEM_SetSinglePageEraseUnProtect(void)
000000  204d              MOVS     r0,#0x4d
;;;708    {
;;;709        __MEM_UnProtect();
000002  0600              LSLS     r0,r0,#24
000004  8980              LDRH     r0,[r0,#0xc]
000006  490b              LDR      r1,|L32.52|
000008  4608              MOV      r0,r1
00000a  214d              MOVS     r1,#0x4d
00000c  0609              LSLS     r1,r1,#24
00000e  8188              STRH     r0,[r1,#0xc]
;;;710        __MEM_SetWriteMode(Erase);
000010  4608              MOV      r0,r1
000012  6900              LDR      r0,[r0,#0x10]
000014  21f0              MOVS     r1,#0xf0
000016  4388              BICS     r0,r0,r1
000018  3020              ADDS     r0,r0,#0x20
00001a  214d              MOVS     r1,#0x4d
00001c  0609              LSLS     r1,r1,#24
00001e  6108              STR      r0,[r1,#0x10]
;;;711        __MEM_SingleWriteUnProtect();
000020  2046              MOVS     r0,#0x46
000022  7708              STRB     r0,[r1,#0x1c]
000024  20b9              MOVS     r0,#0xb9
000026  8388              STRH     r0,[r1,#0x1c]
;;;712        __MEM_Protect();
000028  4608              MOV      r0,r1
00002a  8980              LDRH     r0,[r0,#0xc]
00002c  2000              MOVS     r0,#0
00002e  8188              STRH     r0,[r1,#0xc]
;;;713    }
000030  4770              BX       lr
;;;714    
                          ENDP

000032  0000              DCW      0x0000
                  |L32.52|
                          DCD      0x0000a217

                          AREA ||i.MEM_SetSingleProgramUnProtect||, CODE, READONLY, ALIGN=2

                  MEM_SetSingleProgramUnProtect PROC
;;;756     */
;;;757    void MEM_SetSingleProgramUnProtect(void)
000000  204d              MOVS     r0,#0x4d
;;;758    {
;;;759        __MEM_UnProtect();
000002  0600              LSLS     r0,r0,#24
000004  8980              LDRH     r0,[r0,#0xc]
000006  490b              LDR      r1,|L33.52|
000008  4608              MOV      r0,r1
00000a  214d              MOVS     r1,#0x4d
00000c  0609              LSLS     r1,r1,#24
00000e  8188              STRH     r0,[r1,#0xc]
;;;760        __MEM_SetWriteMode(Program);
000010  4608              MOV      r0,r1
000012  6900              LDR      r0,[r0,#0x10]
000014  21f0              MOVS     r1,#0xf0
000016  4388              BICS     r0,r0,r1
000018  3010              ADDS     r0,r0,#0x10
00001a  214d              MOVS     r1,#0x4d
00001c  0609              LSLS     r1,r1,#24
00001e  6108              STR      r0,[r1,#0x10]
;;;761        __MEM_SingleWriteUnProtect();
000020  2046              MOVS     r0,#0x46
000022  7708              STRB     r0,[r1,#0x1c]
000024  20b9              MOVS     r0,#0xb9
000026  8388              STRH     r0,[r1,#0x1c]
;;;762        __MEM_Protect();
000028  4608              MOV      r0,r1
00002a  8980              LDRH     r0,[r0,#0xc]
00002c  2000              MOVS     r0,#0
00002e  8188              STRH     r0,[r1,#0xc]
;;;763    }
000030  4770              BX       lr
;;;764    
                          ENDP

000032  0000              DCW      0x0000
                  |L33.52|
                          DCD      0x0000a217

                          AREA ||i.MEM_SetWriteMode||, CODE, READONLY, ALIGN=2

                  MEM_SetWriteMode PROC
;;;616     */
;;;617    void MEM_SetWriteMode(MEMAccessMode AccessMode)
000000  b510              PUSH     {r4,lr}
;;;618    {
000002  4604              MOV      r4,r0
;;;619        UnProtectModuleReg(MEMprotect);
000004  4809              LDR      r0,|L34.44|
000006  f7fffffe          BL       UnProtectModuleReg
;;;620        MEM->CR0.MBIT.MDS = AccessMode;
00000a  204d              MOVS     r0,#0x4d
00000c  0600              LSLS     r0,r0,#24
00000e  7c00              LDRB     r0,[r0,#0x10]
000010  21f0              MOVS     r1,#0xf0
000012  4388              BICS     r0,r0,r1
000014  0121              LSLS     r1,r4,#4
000016  22f0              MOVS     r2,#0xf0
000018  4011              ANDS     r1,r1,r2
00001a  4308              ORRS     r0,r0,r1
00001c  214d              MOVS     r1,#0x4d
00001e  0609              LSLS     r1,r1,#24
000020  7408              STRB     r0,[r1,#0x10]
;;;621        ProtectModuleReg(MEMprotect);
000022  4802              LDR      r0,|L34.44|
000024  f7fffffe          BL       ProtectModuleReg
;;;622    }
000028  bd10              POP      {r4,pc}
;;;623    
                          ENDP

00002a  0000              DCW      0x0000
                  |L34.44|
                          DCD      0x4d00000c

                          AREA ||i.MEM_SetWriteUnProtect||, CODE, READONLY, ALIGN=2

                  MEM_SetWriteUnProtect PROC
;;;664     */
;;;665    void MEM_SetWriteUnProtect(UnProtectSKey SKEY)
000000  4a24              LDR      r2,|L35.148|
;;;666    {
;;;667        switch(SKEY)
000002  1a81              SUBS     r1,r0,r2
000004  4290              CMP      r0,r2
000006  d025              BEQ      |L35.84|
000008  dc06              BGT      |L35.24|
00000a  2800              CMP      r0,#0
00000c  d00d              BEQ      |L35.42|
00000e  4922              LDR      r1,|L35.152|
000010  1841              ADDS     r1,r0,r1
000012  2900              CMP      r1,#0
000014  d13c              BNE      |L35.144|
000016  e01c              B        |L35.82|
                  |L35.24|
000018  4a20              LDR      r2,|L35.156|
00001a  1889              ADDS     r1,r1,r2
00001c  2900              CMP      r1,#0
00001e  d028              BEQ      |L35.114|
000020  4a1f              LDR      r2,|L35.160|
000022  1889              ADDS     r1,r1,r2
000024  2900              CMP      r1,#0
000026  d133              BNE      |L35.144|
000028  e024              B        |L35.116|
                  |L35.42|
;;;668        {
;;;669            case NoneSKey:
;;;670                MEM->SKEY.MBIT.SKEY = 0x00;
00002a  214d              MOVS     r1,#0x4d
00002c  0609              LSLS     r1,r1,#24
00002e  7f09              LDRB     r1,[r1,#0x1c]
000030  2100              MOVS     r1,#0
000032  224d              MOVS     r2,#0x4d
000034  0612              LSLS     r2,r2,#24
000036  7711              STRB     r1,[r2,#0x1c]
;;;671                MEM->SKEY.MBIT.SKEY = 0x00;
000038  4611              MOV      r1,r2
00003a  7f09              LDRB     r1,[r1,#0x1c]
00003c  2100              MOVS     r1,#0
00003e  7711              STRB     r1,[r2,#0x1c]
;;;672                MEM->SKEY.MBIT.SKEY2 = 0x0000;
000040  4611              MOV      r1,r2
000042  8bc9              LDRH     r1,[r1,#0x1e]
000044  2100              MOVS     r1,#0
000046  83d1              STRH     r1,[r2,#0x1e]
;;;673                MEM->SKEY.MBIT.SKEY2 = 0x0000;
000048  4611              MOV      r1,r2
00004a  8bc9              LDRH     r1,[r1,#0x1e]
00004c  2100              MOVS     r1,#0
00004e  83d1              STRH     r1,[r2,#0x1e]
;;;674                break;
000050  e01e              B        |L35.144|
                  |L35.82|
;;;675    
;;;676            case APSingleSKey:
;;;677            case APMultipleSKey:
000052  bf00              NOP      
                  |L35.84|
;;;678                MEM->SKEY.MBIT.SKEY = 0x46;
000054  214d              MOVS     r1,#0x4d
000056  0609              LSLS     r1,r1,#24
000058  7f09              LDRB     r1,[r1,#0x1c]
00005a  2146              MOVS     r1,#0x46
00005c  224d              MOVS     r2,#0x4d
00005e  0612              LSLS     r2,r2,#24
000060  7711              STRB     r1,[r2,#0x1c]
;;;679                MEM->SKEY.MBIT.SKEY = SKEY;
000062  4611              MOV      r1,r2
000064  7f09              LDRB     r1,[r1,#0x1c]
000066  b2c2              UXTB     r2,r0
000068  4611              MOV      r1,r2
00006a  224d              MOVS     r2,#0x4d
00006c  0612              LSLS     r2,r2,#24
00006e  7711              STRB     r1,[r2,#0x1c]
;;;680                break;
000070  e00e              B        |L35.144|
                  |L35.114|
;;;681    
;;;682            case ISPSingleSKey:
;;;683            case ISPMultipleSKey:
000072  bf00              NOP      
                  |L35.116|
;;;684                MEM->SKEY.MBIT.SKEY2 = 0x9867;
000074  214d              MOVS     r1,#0x4d
000076  0609              LSLS     r1,r1,#24
000078  8bc9              LDRH     r1,[r1,#0x1e]
00007a  4a0a              LDR      r2,|L35.164|
00007c  214d              MOVS     r1,#0x4d
00007e  0609              LSLS     r1,r1,#24
000080  83ca              STRH     r2,[r1,#0x1e]
;;;685                MEM->SKEY.MBIT.SKEY2 = SKEY;
000082  8bc9              LDRH     r1,[r1,#0x1e]
000084  b282              UXTH     r2,r0
000086  4611              MOV      r1,r2
000088  224d              MOVS     r2,#0x4d
00008a  0612              LSLS     r2,r2,#24
00008c  83d1              STRH     r1,[r2,#0x1e]
;;;686                break;
00008e  bf00              NOP      
                  |L35.144|
000090  bf00              NOP                            ;674
;;;687        }
;;;688    }
000092  4770              BX       lr
;;;689    
                          ENDP

                  |L35.148|
                          DCD      0x000046be
                  |L35.152|
                          DCD      0xffffb947
                  |L35.156|
                          DCD      0xffff8d69
                  |L35.160|
                          DCD      0xfffffaab
                  |L35.164|
                          DCD      0x00009867

                          AREA ||i.MEM_WriteFlashHold_Cmd||, CODE, READONLY, ALIGN=2

                  MEM_WriteFlashHold_Cmd PROC
;;;421     */
;;;422    void MEM_WriteFlashHold_Cmd(FunctionalState State)
000000  b510              PUSH     {r4,lr}
;;;423    {
000002  4604              MOV      r4,r0
;;;424        UnProtectModuleReg(MEMprotect);
000004  480c              LDR      r0,|L36.56|
000006  f7fffffe          BL       UnProtectModuleReg
;;;425        if(State == ENABLE)
00000a  2c01              CMP      r4,#1
00000c  d108              BNE      |L36.32|
;;;426            MEM->CR0.B[0] &= ~MEM_CR0_HOLD_mask_b0;
00000e  204d              MOVS     r0,#0x4d
000010  0600              LSLS     r0,r0,#24
000012  7c00              LDRB     r0,[r0,#0x10]
000014  2104              MOVS     r1,#4
000016  4388              BICS     r0,r0,r1
000018  214d              MOVS     r1,#0x4d
00001a  0609              LSLS     r1,r1,#24
00001c  7408              STRB     r0,[r1,#0x10]
00001e  e007              B        |L36.48|
                  |L36.32|
;;;427        else
;;;428            MEM->CR0.B[0] |= MEM_CR0_HOLD_mask_b0;
000020  204d              MOVS     r0,#0x4d
000022  0600              LSLS     r0,r0,#24
000024  7c00              LDRB     r0,[r0,#0x10]
000026  2104              MOVS     r1,#4
000028  4308              ORRS     r0,r0,r1
00002a  214d              MOVS     r1,#0x4d
00002c  0609              LSLS     r1,r1,#24
00002e  7408              STRB     r0,[r1,#0x10]
                  |L36.48|
;;;429        ProtectModuleReg(MEMprotect);
000030  4801              LDR      r0,|L36.56|
000032  f7fffffe          BL       ProtectModuleReg
;;;430    }
000036  bd10              POP      {r4,pc}
;;;431    
                          ENDP

                  |L36.56|
                          DCD      0x4d00000c

;*** Start embedded assembler ***

#line 1 "C:\\Keil_v5\\ARM\\PACK\\Megawin\\CM0_DFP\\2.0.4\\Device\\MG32x02z\\MG32F02A_Driver\\Source\\MG32x02z_MEM_DRV.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_MG32x02z_MEM_DRV_c_caf09e02____REV16|
#line 481 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.7.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___18_MG32x02z_MEM_DRV_c_caf09e02____REV16| PROC
#line 482

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_MG32x02z_MEM_DRV_c_caf09e02____REVSH|
#line 496
|__asm___18_MG32x02z_MEM_DRV_c_caf09e02____REVSH| PROC
#line 497

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
